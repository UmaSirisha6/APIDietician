Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 500 INTERNAL SERVER ERROR
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:55 GMT
Content-Type: application/json
Content-Length: 37
Connection: close

{
    "message": "Internal Server Error"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 500 INTERNAL SERVER ERROR
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:56 GMT
Content-Type: application/json
Content-Length: 37
Connection: close

{
    "message": "Internal Server Error"
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DMorbidityName%3D%C2%A0Blood%C2%A0P%25essu%26MorbidityTestId%3D%C2%A0BL_%C2%A012
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:56 GMT
Content-Type: application/json
Content-Length: 72
Connection: close

{
    "Message": "Already Deleted OR wrong MorbidityName ,MorbidityTestId."
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity%C2%A0Blood%C2%A0P%25essu
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:56 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DMorbidityName%3DHypothyroidism%26MorbidityTestId%3DTHY_T4
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: application/json
Content-Length: 72
Connection: close

{
    "Message": "Already Deleted OR wrong MorbidityName ,MorbidityTestId."
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/MorbidityHypothyroidism
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DMorbidityName%3D%26MorbidityTestId%3DHYP_PRE
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: application/json
Content-Length: 72
Connection: close

{
    "Message": "Already Deleted OR wrong MorbidityName ,MorbidityTestId."
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: application/json
Content-Length: 9872
Connection: close

{
    "Items": [
        {
            "MorbidityTestName": " Low Pressure ",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " &&&&",
            "MorbidityTestId": " &&_ LO"
        },
        {
            "MorbidityTestName": " 120 or higher",
            "MorbidityTestUnit": " Diabate3",
            "MorbidityMarkerRef": " 2mm hg  ",
            "MorbidityName": " Blood P%essu",
            "MorbidityTestId": " BL_ 12"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes5",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": " /////////////",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " Pre Diatetes",
            "MorbidityTestId": " PR_ //"
        },
        {
            "MorbidityTestName": " Low Pressure ",
            "MorbidityTestUnit": "  ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " Pre Diatetes",
            "MorbidityTestId": " PR_ LO"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 230 or higher",
            "MorbidityName": " PreDiabetes4",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": "Low Pressure ",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "5689562",
            "MorbidityTestId": "568_LOW"
        },
        {
            "MorbidityTestName": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityTestUnit": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityMarkerRef": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityName": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityTestId": " {M_ {M"
        },
        {
            "MorbidityTestName": "Triiodothyronine (T4)",
            "MorbidityName": "Hypothyroidism",
            "MorbidityTestId": "THY_T4"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes2",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": " 230/ * higher",
            "MorbidityTestUnit": " Pre (Diabetes99)",
            "MorbidityMarkerRef": " mm^ hg* ",
            "MorbidityName": " Hyp ertension",
            "MorbidityTestId": " HY_ 23"
        },
        {
            "MorbidityTestName": "sring",
            "MorbidityTestUnit": "string",
            "MorbidityMarkerRef": "sring",
            "MorbidityName": "string",
            "MorbidityTestId": "STR_SRI"
        },
        {
            "MorbidityTestName": "string",
            "MorbidityTestUnit": "string",
            "MorbidityMarkerRef": "string",
            "MorbidityName": "string",
            "MorbidityTestId": "STR_STR"
        },
        {
            "MorbidityTestName": "High blood Pressure",
            "MorbidityTestUnit": "mm / hg",
            "MorbidityMarkerRef": "250 or higher",
            "MorbidityName": "Diabetes Type5",
            "MorbidityTestId": "DIA_HIG"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Diabetes",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Pre Diabetes7",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": "25689545",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "190 or higher ",
            "MorbidityName": "Blood P%essu",
            "MorbidityTestId": "BLO_256"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes3",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": " Hypertension",
            "MorbidityTestUnit": " mm hg",
            "MorbidityMarkerRef": " 230 or higher ",
            "MorbidityName": " Pre Diabetes7",
            "MorbidityTestId": " PR_ HY"
        },
        {
            "MorbidityTestName": " 120 or higher",
            "MorbidityTestUnit": " Diabate3",
            "MorbidityMarkerRef": " 2mm hg  ",
            "MorbidityName": " Blood Pressu",
            "MorbidityTestId": " BL_ 12"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " null",
            "MorbidityMarkerRef": " null",
            "MorbidityName": " null",
            "MorbidityTestId": " NU_ NU"
        },
        {
            "MorbidityTestName": "BP",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "200 or higher",
            "MorbidityName": "--------------",
            "MorbidityTestId": "---_BP"
        },
        {
            "MorbidityTestName": " 120 {} higher",
            "MorbidityTestUnit": " Dia&ba+te5",
            "MorbidityMarkerRef": "  ",
            "MorbidityName": " B--ood Pressure",
            "MorbidityTestId": " B-_ 12"
        },
        {
            "MorbidityTestName": " 1890 / higher",
            "MorbidityTestUnit": " Diaba+te6",
            "MorbidityMarkerRef": " ^mng ",
            "MorbidityName": " B1254oo%d Pressu",
            "MorbidityTestId": " B1_ 18"
        },
        {
            "MorbidityTestName": "/////////////",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "Pre Diatetes",
            "MorbidityTestId": "PRE_///"
        },
        {
            "MorbidityTestName": "Low Pressure ",
            "MorbidityTestUnit": " ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "Pre Diatetes",
            "MorbidityTestId": "PRE_LOW"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "230 or higher",
            "MorbidityName": "PreDiabetes9",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " Blood Pressu",
            "MorbidityTestUnit": " 2mm hg ",
            "MorbidityMarkerRef": " 120 or higher ",
            "MorbidityName": " Diaba*te3",
            "MorbidityTestId": " DI_ BL"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "PreDiabetes6",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " 25689545",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 190 or higher ",
            "MorbidityName": " Blood P%essu",
            "MorbidityTestId": " BL_ 25"
        },
        {
            "MorbidityTestName": " ",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " >250",
            "MorbidityName": " Hypertension",
            "MorbidityTestId": " HY_ "
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " Hypertension",
            "MorbidityTestId": " HY_ BL"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Pre Diabetes",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " mm hg",
            "MorbidityTestUnit": " Diabetes",
            "MorbidityMarkerRef": " 130 or higher ",
            "MorbidityName": " $$$$$",
            "MorbidityTestId": " $$_ MM"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " Diabetes",
            "MorbidityMarkerRef": " mm hg ",
            "MorbidityName": " $$$$$",
            "MorbidityTestId": " $$_ NU"
        },
        {
            "MorbidityTestName": "Blood glcose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Diabetes 2",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": " Hypertension",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 230 or higher",
            "MorbidityName": " Pre Diabetes99",
            "MorbidityTestId": " PR_ HY"
        },
        {
            "MorbidityTestName": " 150 or higher",
            "MorbidityTestUnit": " Pre Diabetes99",
            "MorbidityMarkerRef": " mm /hg ",
            "MorbidityName": " Hypert=ension",
            "MorbidityTestId": " HY_ 15"
        },
        {
            "MorbidityTestName": "Low Pressure ",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "&&&&",
            "MorbidityTestId": "&&&_LOW"
        },
        {
            "MorbidityTestName": "Blood Pressure Levels",
            "MorbidityTestUnit": "mm Hg",
            "MorbidityMarkerRef": "80 or higher",
            "MorbidityName": "Hypotension",
            "MorbidityTestId": "HPOT_BP"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "Hypertension",
            "MorbidityTestId": "HYP_BLO"
        },
        {
            "MorbidityTestName": " Low Pressure ",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " 5689562",
            "MorbidityTestId": " 56_ LO"
        },
        {
            "MorbidityTestName": "456856",
            "MorbidityTestUnit": "string4",
            "MorbidityMarkerRef": "string3",
            "MorbidityName": "string1",
            "MorbidityTestId": "STR_456"
        },
        {
            "MorbidityTestName": " 120 & higher",
            "MorbidityTestUnit": " Diabate",
            "MorbidityMarkerRef": " 8hg 56mm ",
            "MorbidityName": " Blood Pressure",
            "MorbidityTestId": " BL_ 12"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Diabetes Type2",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": "Blood Pressu",
            "MorbidityTestUnit": "2mm hg",
            "MorbidityMarkerRef": "120 or higher",
            "MorbidityName": "Diaba+te3",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "230 or higher",
            "MorbidityName": "PreDiabetes7",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " Blood Pressu",
            "MorbidityTestUnit": " 2mm hg ",
            "MorbidityMarkerRef": " 120 or higher ",
            "MorbidityName": " Diabate3",
            "MorbidityTestId": " DI_ BL"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " hypertension",
            "MorbidityMarkerRef": " mg/dl ",
            "MorbidityName": " Blood glucose",
            "MorbidityTestId": " BL_ NU"
        },
        {
            "MorbidityTestName": " BP",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 200 or higher",
            "MorbidityName": " --------------",
            "MorbidityTestId": " --_ BP"
        },
        {
            "MorbidityTestName": " hypertension",
            "MorbidityTestUnit": " Blood glucose",
            "MorbidityMarkerRef": " 120 or higher ",
            "MorbidityName": " mg/dl",
            "MorbidityTestId": " MG_ HY"
        },
        {
            "MorbidityTestName": " ",
            "MorbidityTestUnit": " ",
            "MorbidityMarkerRef": "  ",
            "MorbidityName": " ",
            "MorbidityTestId": " _ "
        },
        {
            "MorbidityTestName": " anti-Cyclic Citrullinat",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " ",
            "MorbidityName": " ",
            "MorbidityTestId": " _ AN"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " ",
            "MorbidityMarkerRef": "  ",
            "MorbidityName": " ",
            "MorbidityTestId": " _ NU"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "PreDiabetes8",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes",
            "MorbidityTestId": " PR_ BL"
        }
    ]
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DMorbidityName%3DHypo123455%26MorbidityTestId%3DHYP_PRL
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: application/json
Content-Length: 72
Connection: close

{
    "Message": "Already Deleted OR wrong MorbidityName ,MorbidityTestId."
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DMorbidityName%3D%40%40%40%25%26MorbidityTestId%3D%24%25%23%25
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: application/json
Content-Length: 72
Connection: close

{
    "Message": "Already Deleted OR wrong MorbidityName ,MorbidityTestId."
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DMorbidityName%3DHYPBLOODWORK%26MorbidityTestId%3Dhyp_pre
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: application/json
Content-Length: 72
Connection: close

{
    "Message": "Already Deleted OR wrong MorbidityName ,MorbidityTestId."
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:57 GMT
Content-Type: application/json
Content-Length: 9872
Connection: close

{
    "Items": [
        {
            "MorbidityTestName": " Low Pressure ",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " &&&&",
            "MorbidityTestId": " &&_ LO"
        },
        {
            "MorbidityTestName": " 120 or higher",
            "MorbidityTestUnit": " Diabate3",
            "MorbidityMarkerRef": " 2mm hg  ",
            "MorbidityName": " Blood P%essu",
            "MorbidityTestId": " BL_ 12"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes5",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": " /////////////",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " Pre Diatetes",
            "MorbidityTestId": " PR_ //"
        },
        {
            "MorbidityTestName": " Low Pressure ",
            "MorbidityTestUnit": "  ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " Pre Diatetes",
            "MorbidityTestId": " PR_ LO"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 230 or higher",
            "MorbidityName": " PreDiabetes4",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": "Low Pressure ",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "5689562",
            "MorbidityTestId": "568_LOW"
        },
        {
            "MorbidityTestName": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityTestUnit": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityMarkerRef": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityName": " {MorbidityTestName=Blood Pressure, MorbidityTestUnit=mg/dL, MorbidityName=Diabetes Type5, MorbidityMarkerRef=140 or higher}",
            "MorbidityTestId": " {M_ {M"
        },
        {
            "MorbidityTestName": "Triiodothyronine (T4)",
            "MorbidityName": "Hypothyroidism",
            "MorbidityTestId": "THY_T4"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes2",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": " 230/ * higher",
            "MorbidityTestUnit": " Pre (Diabetes99)",
            "MorbidityMarkerRef": " mm^ hg* ",
            "MorbidityName": " Hyp ertension",
            "MorbidityTestId": " HY_ 23"
        },
        {
            "MorbidityTestName": "sring",
            "MorbidityTestUnit": "string",
            "MorbidityMarkerRef": "sring",
            "MorbidityName": "string",
            "MorbidityTestId": "STR_SRI"
        },
        {
            "MorbidityTestName": "string",
            "MorbidityTestUnit": "string",
            "MorbidityMarkerRef": "string",
            "MorbidityName": "string",
            "MorbidityTestId": "STR_STR"
        },
        {
            "MorbidityTestName": "High blood Pressure",
            "MorbidityTestUnit": "mm / hg",
            "MorbidityMarkerRef": "250 or higher",
            "MorbidityName": "Diabetes Type5",
            "MorbidityTestId": "DIA_HIG"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Diabetes",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Pre Diabetes7",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": "25689545",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "190 or higher ",
            "MorbidityName": "Blood P%essu",
            "MorbidityTestId": "BLO_256"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes3",
            "MorbidityTestId": " PR_ BL"
        },
        {
            "MorbidityTestName": " Hypertension",
            "MorbidityTestUnit": " mm hg",
            "MorbidityMarkerRef": " 230 or higher ",
            "MorbidityName": " Pre Diabetes7",
            "MorbidityTestId": " PR_ HY"
        },
        {
            "MorbidityTestName": " 120 or higher",
            "MorbidityTestUnit": " Diabate3",
            "MorbidityMarkerRef": " 2mm hg  ",
            "MorbidityName": " Blood Pressu",
            "MorbidityTestId": " BL_ 12"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " null",
            "MorbidityMarkerRef": " null",
            "MorbidityName": " null",
            "MorbidityTestId": " NU_ NU"
        },
        {
            "MorbidityTestName": "BP",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "200 or higher",
            "MorbidityName": "--------------",
            "MorbidityTestId": "---_BP"
        },
        {
            "MorbidityTestName": " 120 {} higher",
            "MorbidityTestUnit": " Dia&ba+te5",
            "MorbidityMarkerRef": "  ",
            "MorbidityName": " B--ood Pressure",
            "MorbidityTestId": " B-_ 12"
        },
        {
            "MorbidityTestName": " 1890 / higher",
            "MorbidityTestUnit": " Diaba+te6",
            "MorbidityMarkerRef": " ^mng ",
            "MorbidityName": " B1254oo%d Pressu",
            "MorbidityTestId": " B1_ 18"
        },
        {
            "MorbidityTestName": "/////////////",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "Pre Diatetes",
            "MorbidityTestId": "PRE_///"
        },
        {
            "MorbidityTestName": "Low Pressure ",
            "MorbidityTestUnit": " ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "Pre Diatetes",
            "MorbidityTestId": "PRE_LOW"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "230 or higher",
            "MorbidityName": "PreDiabetes9",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " Blood Pressu",
            "MorbidityTestUnit": " 2mm hg ",
            "MorbidityMarkerRef": " 120 or higher ",
            "MorbidityName": " Diaba*te3",
            "MorbidityTestId": " DI_ BL"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "PreDiabetes6",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " 25689545",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 190 or higher ",
            "MorbidityName": " Blood P%essu",
            "MorbidityTestId": " BL_ 25"
        },
        {
            "MorbidityTestName": " ",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " >250",
            "MorbidityName": " Hypertension",
            "MorbidityTestId": " HY_ "
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " Hypertension",
            "MorbidityTestId": " HY_ BL"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Pre Diabetes",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " mm hg",
            "MorbidityTestUnit": " Diabetes",
            "MorbidityMarkerRef": " 130 or higher ",
            "MorbidityName": " $$$$$",
            "MorbidityTestId": " $$_ MM"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " Diabetes",
            "MorbidityMarkerRef": " mm hg ",
            "MorbidityName": " $$$$$",
            "MorbidityTestId": " $$_ NU"
        },
        {
            "MorbidityTestName": "Blood glcose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Diabetes 2",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": " Hypertension",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 230 or higher",
            "MorbidityName": " Pre Diabetes99",
            "MorbidityTestId": " PR_ HY"
        },
        {
            "MorbidityTestName": " 150 or higher",
            "MorbidityTestUnit": " Pre Diabetes99",
            "MorbidityMarkerRef": " mm /hg ",
            "MorbidityName": " Hypert=ension",
            "MorbidityTestId": " HY_ 15"
        },
        {
            "MorbidityTestName": "Low Pressure ",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "100<",
            "MorbidityName": "&&&&",
            "MorbidityTestId": "&&&_LOW"
        },
        {
            "MorbidityTestName": "Blood Pressure Levels",
            "MorbidityTestUnit": "mm Hg",
            "MorbidityMarkerRef": "80 or higher",
            "MorbidityName": "Hypotension",
            "MorbidityTestId": "HPOT_BP"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "Hypertension",
            "MorbidityTestId": "HYP_BLO"
        },
        {
            "MorbidityTestName": " Low Pressure ",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " 100<",
            "MorbidityName": " 5689562",
            "MorbidityTestId": " 56_ LO"
        },
        {
            "MorbidityTestName": "456856",
            "MorbidityTestUnit": "string4",
            "MorbidityMarkerRef": "string3",
            "MorbidityName": "string1",
            "MorbidityTestId": "STR_456"
        },
        {
            "MorbidityTestName": " 120 & higher",
            "MorbidityTestUnit": " Diabate",
            "MorbidityMarkerRef": " 8hg 56mm ",
            "MorbidityName": " Blood Pressure",
            "MorbidityTestId": " BL_ 12"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Diabetes Type2",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": "Blood Pressu",
            "MorbidityTestUnit": "2mm hg",
            "MorbidityMarkerRef": "120 or higher",
            "MorbidityName": "Diaba+te3",
            "MorbidityTestId": "DIA_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "230 or higher",
            "MorbidityName": "PreDiabetes7",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " Blood Pressu",
            "MorbidityTestUnit": " 2mm hg ",
            "MorbidityMarkerRef": " 120 or higher ",
            "MorbidityName": " Diabate3",
            "MorbidityTestId": " DI_ BL"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " hypertension",
            "MorbidityMarkerRef": " mg/dl ",
            "MorbidityName": " Blood glucose",
            "MorbidityTestId": " BL_ NU"
        },
        {
            "MorbidityTestName": " BP",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 200 or higher",
            "MorbidityName": " --------------",
            "MorbidityTestId": " --_ BP"
        },
        {
            "MorbidityTestName": " hypertension",
            "MorbidityTestUnit": " Blood glucose",
            "MorbidityMarkerRef": " 120 or higher ",
            "MorbidityName": " mg/dl",
            "MorbidityTestId": " MG_ HY"
        },
        {
            "MorbidityTestName": " ",
            "MorbidityTestUnit": " ",
            "MorbidityMarkerRef": "  ",
            "MorbidityName": " ",
            "MorbidityTestId": " _ "
        },
        {
            "MorbidityTestName": " anti-Cyclic Citrullinat",
            "MorbidityTestUnit": " mm hg ",
            "MorbidityMarkerRef": " ",
            "MorbidityName": " ",
            "MorbidityTestId": " _ AN"
        },
        {
            "MorbidityTestName": " null",
            "MorbidityTestUnit": " ",
            "MorbidityMarkerRef": "  ",
            "MorbidityName": " ",
            "MorbidityTestId": " _ NU"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "PreDiabetes8",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": " Blood glucose",
            "MorbidityTestUnit": " mg/dl ",
            "MorbidityMarkerRef": " 240 or higher",
            "MorbidityName": " PreDiabetes",
            "MorbidityTestId": " PR_ BL"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DHypothyroidism
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 161
Connection: close

{
    "Items": [
        {
            "MorbidityName": "Hypothyroidism"
        },
        {
            "MorbidityTestName": "Triiodothyronine (T4)",
            "MorbidityName": "Hypothyroidism",
            "MorbidityTestId": "THY_T4"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Moidity/MorbidityName%3DHypo%20%20%20thyrodism
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DHypo%20%20%20thyrodism
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3D
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3D26530
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3D2653%28%29
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3D2653Hyper
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3D%23%23%23%23
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DHypothyroidism
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DPRE_BLO
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DPRE_BLO
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3DPRE_BLO
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:58 GMT
Content-Type: application/json
Content-Length: 1049
Connection: close

{
    "Items": [
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Pre Diabetes7",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "230 or higher",
            "MorbidityName": "PreDiabetes9",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "PreDiabetes6",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dL",
            "MorbidityMarkerRef": "110 or higher",
            "MorbidityName": "Pre Diabetes",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mm hg ",
            "MorbidityMarkerRef": "230 or higher",
            "MorbidityName": "PreDiabetes7",
            "MorbidityTestId": "PRE_BLO"
        },
        {
            "MorbidityTestName": "Blood glucose",
            "MorbidityTestUnit": "mg/dl ",
            "MorbidityMarkerRef": "240 or higher",
            "MorbidityName": "PreDiabetes8",
            "MorbidityTestId": "PRE_BLO"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MoidityTestId%3DPREBLOlSE
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3DPREBLOlSE
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3D
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3D12356
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3D256_356%28%29
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3D*******
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3DPREBLOl122SE
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 32
Connection: close

{
    "Message": "Items not found!"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3DHypothyroidism
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3DPRE_BLO
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityTestId%3DPRE_BLO
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
[
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate2",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes7",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Blood Pressu",
        "MorbidityTestUnit": "2mm hg ",
        "MorbidityName": "Diabate3",
        "MorbidityMarkerRef": "120 or higher"
    },
    {
        "MorbidityTestName": "Hypertension",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diabetes99",
        "MorbidityMarkerRef": "230 or higher"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "&&&&",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "/////////////",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "mm hg",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "*******"
    },
    {
        "MorbidityTestName": "Low Pressure ",
        "MorbidityTestUnit": "*******",
        "MorbidityName": "Pre Diatetes",
        "MorbidityMarkerRef": "100<"
    },
    {
        "MorbidityTestName": "BP",
        "MorbidityTestUnit": "mg/dl",
        "MorbidityName": "--------------",
        "MorbidityMarkerRef": "200 or higher"
    }
]
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:24:59 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "PreDiabetes8",
    "MorbidityTestName": "Blood glucose",
    "MorbidityMarkerRef": "240 or higher",
    "MorbidityTestUnit": "mg/dl "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "PreDiabetes9",
    "MorbidityTestName": "Blood glucose",
    "MorbidityMarkerRef": "230 or higher",
    "MorbidityTestUnit": "mm hg "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "Blood P%essu",
    "MorbidityTestName": "25689545",
    "MorbidityMarkerRef": "190 or higher ",
    "MorbidityTestUnit": "mg/dl "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "",
    "MorbidityTestName": "anti-Cyclic Citrullinat",
    "MorbidityMarkerRef": "",
    "MorbidityTestUnit": "mm hg "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 95
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['MorbidityName', 'MorbidityMarkerRef']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "Hypertension",
    "MorbidityTestName": "",
    "MorbidityMarkerRef": ">250",
    "MorbidityTestUnit": "mm hg "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 77
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['MorbidityTestName']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "Pre Diatetes",
    "MorbidityTestName": "Low Pressure ",
    "MorbidityMarkerRef": "100<",
    "MorbidityTestUnit": " "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "5689562",
    "MorbidityTestName": "Low Pressure ",
    "MorbidityMarkerRef": "100<",
    "MorbidityTestUnit": "mm hg "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "&&&&",
    "MorbidityTestName": "Low Pressure ",
    "MorbidityMarkerRef": "100<",
    "MorbidityTestUnit": "mm hg "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:00 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "Pre Diatetes",
    "MorbidityTestName": "/////////////",
    "MorbidityMarkerRef": "100<",
    "MorbidityTestUnit": "mm hg "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "Pre Diatetes",
    "MorbidityTestName": "Low Pressure ",
    "MorbidityMarkerRef": "*******",
    "MorbidityTestUnit": "mm hg "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "Pre Diatetes",
    "MorbidityTestName": "Low Pressure ",
    "MorbidityMarkerRef": "100<",
    "MorbidityTestUnit": "******* "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "--------------",
    "MorbidityTestName": "BP",
    "MorbidityMarkerRef": "200 or higher",
    "MorbidityTestUnit": "mg/dl "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Morbidity/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityName": "Hypertension",
    "MorbidityTestName": "Blood glucose",
    "MorbidityMarkerRef": "240 or higher",
    "MorbidityTestUnit": "mg/dl "
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 30
Connection: close

{
    "Message": "error occurred"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes%20Type1%26MorbidityTestId%3DDIA_MIL
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "101-201",
    "MorbidityTestUnit": "hg"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 162
Connection: close

{
    "MorbidityTestId": "DIA_MIL",
    "MorbidityName": "Diabetes Type1",
    "MorbidityMarkerRef": "101-201",
    "MorbidityTestUnit": "hg",
    "Message": "Successfully Updated."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes%20Type2%26MorbidityTestId%3DDIA2_BG
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "45-98",
    "MorbidityTestUnit": "mM/ mH"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 164
Connection: close

{
    "MorbidityTestId": "DIA2_BG",
    "MorbidityName": "Diabetes Type2",
    "MorbidityMarkerRef": "45-98",
    "MorbidityTestUnit": "mM/ mH",
    "Message": "Successfully Updated."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes1012%26MorbidityTestId%3DDIA_MIL
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "between 200 and 300",
    "MorbidityTestUnit": "mg/hg"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:01 GMT
Content-Type: application/json
Content-Length: 175
Connection: close

{
    "MorbidityTestId": "DIA_MIL",
    "MorbidityName": "Diabetes1012",
    "MorbidityMarkerRef": "between 200 and 300",
    "MorbidityTestUnit": "mg/hg",
    "Message": "Successfully Updated."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3Dxxxxxx101%26MorbidityTestId%3DDIA_MIL
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "300 >",
    "MorbidityTestUnit": "hl"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 155
Connection: close

{
    "MorbidityTestId": "DIA_MIL",
    "MorbidityName": "xxxxxx101",
    "MorbidityMarkerRef": "300 >",
    "MorbidityTestUnit": "hl",
    "Message": "Successfully Updated."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes%20Type1%26MorbidityTestId%3Dyyyyy
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "hg"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 166
Connection: close

{
    "MorbidityTestId": "yyyyy",
    "MorbidityName": "Diabetes Type1",
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "hg",
    "Message": "Successfully Updated."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes%20Type2%26MorbidityTestId%3Dhdsdds
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "hg"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 167
Connection: close

{
    "MorbidityTestId": "hdsdds",
    "MorbidityName": "Diabetes Type2",
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "hg",
    "Message": "Successfully Updated."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes%20Type1%26MorbidityTestId%3DDIA_MIL
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 77
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['MorbidityTestUnit']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes%20Type1%26MorbidityTestId%3DDIA_MIL
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "",
    "MorbidityTestUnit": "hg"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 78
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['MorbidityMarkerRef']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3DDiabetes%20Type1%26MorbidityTestId%3D
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "hg"
}
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Morbidity/MorbidityName%3D%26MorbidityTestId%3DDIA_MIL
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 405 METHOD NOT ALLOWED
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 64
Allow: GET, OPTIONS, HEAD
Connection: close

{
    "message": "The method is not allowed for the requested URL."
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 9849
Connection: close

{
    "Items": [
        {
            "RecipeName": "Achari Paneer",
            "RecipeStep": "For achari paneer To make achari paneer, heat the oil in a deep non-stick pan, add the fennel seeds, mustard seeds, fenugreek seeds, nigella seeds, cumin seeds and asafoetida and sauté on a medium flame for 1 minute. Add the onion and sauté on a medium flame for 2 minutes. Add the paneer, turmeric, chilli powder, black salt, mix well and cook on a medium flame for 1 minute, while stirring occasionally. Add the curds, plain flour, mix well and cook on a medium flame for 1 to 2 minutes, while stirring occasionally. Switch off the flame, add the coriander and salt and mix well. Serve the achari paneer hot with rice or rotis.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "vegetarian",
            "RecipeId": 1,
            "RecipeNutrient": "Energy 381 cal Protein 13.4 g Carbohydrates 12.8 g Fiber 0.2 g Fat 29 g Cholesterol 12 mg Sodium 16.8 mg",
            "RecipeIngredient": "For Achari Paneer 1 cup paneer (cottage cheese) cubes 1 tbsp oil 1 tsp fennel seeds (saunf) 1/4 tsp mustard seeds ( rai / sarson) 1/4 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 1/2 cup thinly sliced onions 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp black salt (sanchal) 3/4 cup whisked curds (dahi) 1 tsp plain flour (maida) 2 tbsp chopped coriander (dhania) salt to taste"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/achari-baingan-30888r",
            "RecipeName": "Achari Baingan",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_achari_baingan-8524.jpg?size=696X905",
            "RecipeStep": "Combine the brinjals with the prepared marinade in a deep bowl and toss gently. Keep aside for 5 minutes. Heat the oil in a kadhai and deep-fry the marinade brinjals in it till they are golden brown in colour from all the sides. Drain on an absorbent paper and keep aside. Combine the fennel seeds, mustard seeds, fenugreek seeds, onion seeds, cumin seeds and asafoetida in a small bowl and keep aside. Heat the oil in a deep pan and add the above mixture. When the seeds crackle, add the onions, ginger-garlic paste and green chillies and sauté on a medium flame for 2 minutes. Add the turmeric powder, chilli powder, punjabi garam masala, dry mango powder and salt and sauté on a medium flame for 2 minutes. Add the curds, fried brinjals and fresh cream, mix gently and cook on a slow flame for 2 to 3 minutes, while stirring continuously. Serve hot garnished with coriander.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 2,
            "RecipeNutrient": "Energy 215 cal Protein 3.1 g Carbohydrates 6 g Fiber 4 g Fat 19.2 g Cholesterol 6 mg Sodium 18 mg",
            "RecipeIngredient": "To Be Mixed Into A Marinade 1 tbsp ginger-garlic (adrak-lehsun) paste 1 tsp chilli powder 1/2 tsp turmeric powder (haldi) salt to taste 1 tsp oil  Other Ingredients 2 cups brinjals (baingan / eggplant) , cut into 1\"\" cubes oil for deep frying 1 tsp fennel seeds (saunf) 1 tsp mustard seeds ( rai / sarson) 1 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 2 tbsp oil 1/2 cup sliced onions 1 tsp ginger-garlic (adrak-lehsun) paste 1 tsp chopped green chillies 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp punjabi garam masala 1/2 tsp dried mango powder (amchur) salt to taste 3/4 cup whisked curds (dahi) 1/2 cup fresh cream  For The Garnish 2 tbsp finely chopped coriander (dhania)"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/ajwain-roti-ajwain-paratha-4390r",
            "RecipeName": "Ajwain Roti,",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_ajwain_roti,_ajwain_paratha-15484.jpg?size=696X905",
            "RecipeStep": "For ajwain roti To make ajwain roti, combine all the ingredients in a deep bowl and mix well. Add enough water (approx. ¾ cup) and knead into a soft dough. Cover the dough with a lid and keep aside for 15 minutes. Divide the dough into 10 equal portions and roll out each portion of the dough into a 175 mm. (7”) diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook the roti using a little ghee, till golden brown spots appear on both the sides. Serve the ajwain roti immediately.",
            "RecipeType": "Dinner",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 3,
            "RecipeNutrient": "Energy 147 cal Protein 3.1 g Carbohydrates 18.9 g Fiber 3.2 g Fat 7 g Cholesterol 0 mg Sodium 5.2 mg",
            "RecipeIngredient": "For Ajwain Roti 2 cups whole wheat flour (gehun ka atta) 1 tbsp carom seeds (ajwain) 3 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling ghee for cooking"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/val-dal-khichdi--know-your-dals-and-pulses--32822r",
            "RecipeName": "Val Dal Khichdi ( Know Your Dals and Pulses )",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_val-dal-khichdi-(-know-your-dals-and-pulses-)-1649.jpg?size=500X662",
            "RecipeStep": "\"Soak the vaal dal and rice in enough water for 10 minutes. Drain and keep aside. Heat the ghee in a pressure cooker and add the cumin seeds, cloves, cinnamon and bayleaves. When the cumin seeds crackele, add all the vegetables, turmeric powder, chilli powder, garam masala and salt and mix well. Add the rice and vaal dal and sauté on a medium flame till the ghee coats the grains evenly. Add 4 cups of hot water, stir well and pressure cook for at least 3 whistles. Allow the steam to escape before opening the lid. Serve hot with raita / kadhi / papad.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 6,
            "RecipeIngredient": "\"1 cup vaal dal (split field beans/ split butter beans) 1 cup rice (chawal) 1/2 cup ghee 1/2 tsp cumin seeds (jeera) 3 to 4 cloves (laung / lavang) 2 sticks cinnamon (dalchini) 2 bayleaves 1 cup cauliflower florets 3/4 cup brinjal (baingan / eggplant) cubes 3/4 cup potato cubes 3/4 cup french beans , cut into 1” pieces 1/2 cup onion cubes 1/2 cup green peas 1/2 tsp turmeric powder (haldi) 1 tsp chilli powder 1/2 tsp garam masala salt to taste\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-and-cabbage-roti-40321r",
            "RecipeName": "Oats and Cabbage Roti",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_oats_and_cabbage_roti_(_tiffin_recipe)-10316.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a deep bowl and knead into a soft dough using enough water. Divide the dough into 8 equal portions. Roll out a portion of the dough into a 125 mm. (5\"\") diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook it, on a medium flame, using a little oil, till it turns golden brown in colour from both the sides. Repeat steps 3 and 4 to make 7 more rotis.  How to pack Allow it to cool completely, wrap in an aluminium foil, and pack in an air-tight tiffin box.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 7,
            "RecipeNutrient": "\"Energy 56 cal Protein 1.5 g Carbohydrates 7.7 g Fiber 1.4 g Fat 2.3 g Cholesterol 0 mg Sodium 2.6 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup grated cabbage 1/2 cup whole wheat flour (gehun ka atta) 1 tsp sesame seeds (til) 1/2 tsp chilli powder 1/4 tsp turmeric powder (haldi) 1/4 tsp asafoetida (hing) 2 tsp garlic (lehsun) paste 1 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling 2 tsp oil for cooking  For Serving low-fat curds (dahi) , made from 99.7% fat-free milk\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/zucchini-and-carrot-pancake-38986r",
            "RecipeName": "Zucchini and Carrot Pancake",
            "RecipeImg": "https://cdn.tarladalal.com/members/9306/big/big_zucchini_and_carrot_pancake-8111.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients along with approx. ½ cup of water in a deep bowl and mix well to make a batter of pouring consistency. Grease a non-stick tava (griddle) using ½ tsp of oil, pour one ladleful of the batter on it and spread it to form 75 mm. (3”) diameter thick circle. Cook it, using ¼ tsp of oil, till it turns crisp and golden brown in colour from both sides. Repeat with the remaining batter to make 5 more pancakes. Serve immediately.  Handy tip : The quantity of water may vary depending on the quality of besan and semolina used.\"",
            "RecipeType": "Breakfast",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 8,
            "RecipeNutrient": "\"Energy 86 cal Protein 2.3 g Carbohydrates 14.1 g Fiber 1.7 g Fat 2.3 g Cholesterol 0 mg Sodium 8.4 mg\"",
            "RecipeIngredient": "\"3/4 cup thickly grated zucchini 1/4 cup thickly grated carrot 1/2 cup rice flour (chawal ka atta) 1/4 cup besan (bengal gram flour) 2 tbsp finely chopped coriander (dhania) 1 tsp finely chopped green chillies salt to taste 2 tsp oil for greasing and cooking\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-apple-almond-milk-healthy-smoothie-42328r",
            "RecipeName": "Oats Apple Almond Milk Healthy Smoothie",
            "RecipeImg": "https://cdn.tarladalal.com/members/9306/big/big_oats_apple_almond_milk_healthy_smoothie-13592.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a mixer. Blend till smooth. Refrigerate for atleast 1 hour and serve chilled.\"",
            "RecipeType": "Breakfast",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 9,
            "RecipeNutrient": "\"Energy 125 cal Protein 3.9 g Carbohydrates 15.1 g Fiber 2 g Fat 4.4 g Cholesterol 8 mg Sodium 31.4 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup roughly chopped apple 1/4 cup almond milk 1/2 cup curd (dahi) 1/4 tsp cinnamon (dalchini) powder 7 ice-cubes 1 tsp maple syrup or honey\""
        },
        {
            "RecipeId": 4,
            "RecipeName": "Chicken Gravy",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "Non-Vegetarian"
        },
        {
            "RecipeId": 5,
            "RecipeName": "Fish Tikka",
            "RecipeType": "Snack",
            "RecipeFoodCategory": "Non-Vegetarian"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recips/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeFoodCategory%3DVegetarian
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 8256
Connection: close

{
    "Items": [
        {
            "RecipeUrl": "https://www.tarladalal.com/achari-baingan-30888r",
            "RecipeName": "Achari Baingan",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_achari_baingan-8524.jpg?size=696X905",
            "RecipeStep": "Combine the brinjals with the prepared marinade in a deep bowl and toss gently. Keep aside for 5 minutes. Heat the oil in a kadhai and deep-fry the marinade brinjals in it till they are golden brown in colour from all the sides. Drain on an absorbent paper and keep aside. Combine the fennel seeds, mustard seeds, fenugreek seeds, onion seeds, cumin seeds and asafoetida in a small bowl and keep aside. Heat the oil in a deep pan and add the above mixture. When the seeds crackle, add the onions, ginger-garlic paste and green chillies and sauté on a medium flame for 2 minutes. Add the turmeric powder, chilli powder, punjabi garam masala, dry mango powder and salt and sauté on a medium flame for 2 minutes. Add the curds, fried brinjals and fresh cream, mix gently and cook on a slow flame for 2 to 3 minutes, while stirring continuously. Serve hot garnished with coriander.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 2,
            "RecipeNutrient": "Energy 215 cal Protein 3.1 g Carbohydrates 6 g Fiber 4 g Fat 19.2 g Cholesterol 6 mg Sodium 18 mg",
            "RecipeIngredient": "To Be Mixed Into A Marinade 1 tbsp ginger-garlic (adrak-lehsun) paste 1 tsp chilli powder 1/2 tsp turmeric powder (haldi) salt to taste 1 tsp oil  Other Ingredients 2 cups brinjals (baingan / eggplant) , cut into 1\"\" cubes oil for deep frying 1 tsp fennel seeds (saunf) 1 tsp mustard seeds ( rai / sarson) 1 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 2 tbsp oil 1/2 cup sliced onions 1 tsp ginger-garlic (adrak-lehsun) paste 1 tsp chopped green chillies 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp punjabi garam masala 1/2 tsp dried mango powder (amchur) salt to taste 3/4 cup whisked curds (dahi) 1/2 cup fresh cream  For The Garnish 2 tbsp finely chopped coriander (dhania)"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/ajwain-roti-ajwain-paratha-4390r",
            "RecipeName": "Ajwain Roti,",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_ajwain_roti,_ajwain_paratha-15484.jpg?size=696X905",
            "RecipeStep": "For ajwain roti To make ajwain roti, combine all the ingredients in a deep bowl and mix well. Add enough water (approx. ¾ cup) and knead into a soft dough. Cover the dough with a lid and keep aside for 15 minutes. Divide the dough into 10 equal portions and roll out each portion of the dough into a 175 mm. (7”) diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook the roti using a little ghee, till golden brown spots appear on both the sides. Serve the ajwain roti immediately.",
            "RecipeType": "Dinner",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 3,
            "RecipeNutrient": "Energy 147 cal Protein 3.1 g Carbohydrates 18.9 g Fiber 3.2 g Fat 7 g Cholesterol 0 mg Sodium 5.2 mg",
            "RecipeIngredient": "For Ajwain Roti 2 cups whole wheat flour (gehun ka atta) 1 tbsp carom seeds (ajwain) 3 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling ghee for cooking"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/val-dal-khichdi--know-your-dals-and-pulses--32822r",
            "RecipeName": "Val Dal Khichdi ( Know Your Dals and Pulses )",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_val-dal-khichdi-(-know-your-dals-and-pulses-)-1649.jpg?size=500X662",
            "RecipeStep": "\"Soak the vaal dal and rice in enough water for 10 minutes. Drain and keep aside. Heat the ghee in a pressure cooker and add the cumin seeds, cloves, cinnamon and bayleaves. When the cumin seeds crackele, add all the vegetables, turmeric powder, chilli powder, garam masala and salt and mix well. Add the rice and vaal dal and sauté on a medium flame till the ghee coats the grains evenly. Add 4 cups of hot water, stir well and pressure cook for at least 3 whistles. Allow the steam to escape before opening the lid. Serve hot with raita / kadhi / papad.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 6,
            "RecipeIngredient": "\"1 cup vaal dal (split field beans/ split butter beans) 1 cup rice (chawal) 1/2 cup ghee 1/2 tsp cumin seeds (jeera) 3 to 4 cloves (laung / lavang) 2 sticks cinnamon (dalchini) 2 bayleaves 1 cup cauliflower florets 3/4 cup brinjal (baingan / eggplant) cubes 3/4 cup potato cubes 3/4 cup french beans , cut into 1” pieces 1/2 cup onion cubes 1/2 cup green peas 1/2 tsp turmeric powder (haldi) 1 tsp chilli powder 1/2 tsp garam masala salt to taste\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-and-cabbage-roti-40321r",
            "RecipeName": "Oats and Cabbage Roti",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_oats_and_cabbage_roti_(_tiffin_recipe)-10316.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a deep bowl and knead into a soft dough using enough water. Divide the dough into 8 equal portions. Roll out a portion of the dough into a 125 mm. (5\"\") diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook it, on a medium flame, using a little oil, till it turns golden brown in colour from both the sides. Repeat steps 3 and 4 to make 7 more rotis.  How to pack Allow it to cool completely, wrap in an aluminium foil, and pack in an air-tight tiffin box.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 7,
            "RecipeNutrient": "\"Energy 56 cal Protein 1.5 g Carbohydrates 7.7 g Fiber 1.4 g Fat 2.3 g Cholesterol 0 mg Sodium 2.6 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup grated cabbage 1/2 cup whole wheat flour (gehun ka atta) 1 tsp sesame seeds (til) 1/2 tsp chilli powder 1/4 tsp turmeric powder (haldi) 1/4 tsp asafoetida (hing) 2 tsp garlic (lehsun) paste 1 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling 2 tsp oil for cooking  For Serving low-fat curds (dahi) , made from 99.7% fat-free milk\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/zucchini-and-carrot-pancake-38986r",
            "RecipeName": "Zucchini and Carrot Pancake",
            "RecipeImg": "https://cdn.tarladalal.com/members/9306/big/big_zucchini_and_carrot_pancake-8111.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients along with approx. ½ cup of water in a deep bowl and mix well to make a batter of pouring consistency. Grease a non-stick tava (griddle) using ½ tsp of oil, pour one ladleful of the batter on it and spread it to form 75 mm. (3”) diameter thick circle. Cook it, using ¼ tsp of oil, till it turns crisp and golden brown in colour from both sides. Repeat with the remaining batter to make 5 more pancakes. Serve immediately.  Handy tip : The quantity of water may vary depending on the quality of besan and semolina used.\"",
            "RecipeType": "Breakfast",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 8,
            "RecipeNutrient": "\"Energy 86 cal Protein 2.3 g Carbohydrates 14.1 g Fiber 1.7 g Fat 2.3 g Cholesterol 0 mg Sodium 8.4 mg\"",
            "RecipeIngredient": "\"3/4 cup thickly grated zucchini 1/4 cup thickly grated carrot 1/2 cup rice flour (chawal ka atta) 1/4 cup besan (bengal gram flour) 2 tbsp finely chopped coriander (dhania) 1 tsp finely chopped green chillies salt to taste 2 tsp oil for greasing and cooking\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-apple-almond-milk-healthy-smoothie-42328r",
            "RecipeName": "Oats Apple Almond Milk Healthy Smoothie",
            "RecipeImg": "https://cdn.tarladalal.com/members/9306/big/big_oats_apple_almond_milk_healthy_smoothie-13592.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a mixer. Blend till smooth. Refrigerate for atleast 1 hour and serve chilled.\"",
            "RecipeType": "Breakfast",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 9,
            "RecipeNutrient": "\"Energy 125 cal Protein 3.9 g Carbohydrates 15.1 g Fiber 2 g Fat 4.4 g Cholesterol 8 mg Sodium 31.4 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup roughly chopped apple 1/4 cup almond milk 1/2 cup curd (dahi) 1/4 tsp cinnamon (dalchini) powder 7 ice-cubes 1 tsp maple syrup or honey\""
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeFoodCategory%3DNon-Vegetarian
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 231
Connection: close

{
    "Items": [
        {
            "RecipeId": 4,
            "RecipeName": "Chicken Gravy",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "Non-Vegetarian"
        },
        {
            "RecipeId": 5,
            "RecipeName": "Fish Tikka",
            "RecipeType": "Snack",
            "RecipeFoodCategory": "Non-Vegetarian"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeFoodCategory%3Dnon-vegetarian
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:02 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeFoodCategory%3Dnonveg
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeFoodCategory%3Dveg
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeIngredient%3Dcurd
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 5710
Connection: close

{
    "Items": [
        {
            "RecipeName": "Achari Paneer",
            "RecipeStep": "For achari paneer To make achari paneer, heat the oil in a deep non-stick pan, add the fennel seeds, mustard seeds, fenugreek seeds, nigella seeds, cumin seeds and asafoetida and sauté on a medium flame for 1 minute. Add the onion and sauté on a medium flame for 2 minutes. Add the paneer, turmeric, chilli powder, black salt, mix well and cook on a medium flame for 1 minute, while stirring occasionally. Add the curds, plain flour, mix well and cook on a medium flame for 1 to 2 minutes, while stirring occasionally. Switch off the flame, add the coriander and salt and mix well. Serve the achari paneer hot with rice or rotis.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "vegetarian",
            "RecipeId": 1,
            "RecipeNutrient": "Energy 381 cal Protein 13.4 g Carbohydrates 12.8 g Fiber 0.2 g Fat 29 g Cholesterol 12 mg Sodium 16.8 mg",
            "RecipeIngredient": "For Achari Paneer 1 cup paneer (cottage cheese) cubes 1 tbsp oil 1 tsp fennel seeds (saunf) 1/4 tsp mustard seeds ( rai / sarson) 1/4 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 1/2 cup thinly sliced onions 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp black salt (sanchal) 3/4 cup whisked curds (dahi) 1 tsp plain flour (maida) 2 tbsp chopped coriander (dhania) salt to taste"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/achari-baingan-30888r",
            "RecipeName": "Achari Baingan",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_achari_baingan-8524.jpg?size=696X905",
            "RecipeStep": "Combine the brinjals with the prepared marinade in a deep bowl and toss gently. Keep aside for 5 minutes. Heat the oil in a kadhai and deep-fry the marinade brinjals in it till they are golden brown in colour from all the sides. Drain on an absorbent paper and keep aside. Combine the fennel seeds, mustard seeds, fenugreek seeds, onion seeds, cumin seeds and asafoetida in a small bowl and keep aside. Heat the oil in a deep pan and add the above mixture. When the seeds crackle, add the onions, ginger-garlic paste and green chillies and sauté on a medium flame for 2 minutes. Add the turmeric powder, chilli powder, punjabi garam masala, dry mango powder and salt and sauté on a medium flame for 2 minutes. Add the curds, fried brinjals and fresh cream, mix gently and cook on a slow flame for 2 to 3 minutes, while stirring continuously. Serve hot garnished with coriander.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 2,
            "RecipeNutrient": "Energy 215 cal Protein 3.1 g Carbohydrates 6 g Fiber 4 g Fat 19.2 g Cholesterol 6 mg Sodium 18 mg",
            "RecipeIngredient": "To Be Mixed Into A Marinade 1 tbsp ginger-garlic (adrak-lehsun) paste 1 tsp chilli powder 1/2 tsp turmeric powder (haldi) salt to taste 1 tsp oil  Other Ingredients 2 cups brinjals (baingan / eggplant) , cut into 1\"\" cubes oil for deep frying 1 tsp fennel seeds (saunf) 1 tsp mustard seeds ( rai / sarson) 1 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 2 tbsp oil 1/2 cup sliced onions 1 tsp ginger-garlic (adrak-lehsun) paste 1 tsp chopped green chillies 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp punjabi garam masala 1/2 tsp dried mango powder (amchur) salt to taste 3/4 cup whisked curds (dahi) 1/2 cup fresh cream  For The Garnish 2 tbsp finely chopped coriander (dhania)"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-and-cabbage-roti-40321r",
            "RecipeName": "Oats and Cabbage Roti",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_oats_and_cabbage_roti_(_tiffin_recipe)-10316.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a deep bowl and knead into a soft dough using enough water. Divide the dough into 8 equal portions. Roll out a portion of the dough into a 125 mm. (5\"\") diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook it, on a medium flame, using a little oil, till it turns golden brown in colour from both the sides. Repeat steps 3 and 4 to make 7 more rotis.  How to pack Allow it to cool completely, wrap in an aluminium foil, and pack in an air-tight tiffin box.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 7,
            "RecipeNutrient": "\"Energy 56 cal Protein 1.5 g Carbohydrates 7.7 g Fiber 1.4 g Fat 2.3 g Cholesterol 0 mg Sodium 2.6 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup grated cabbage 1/2 cup whole wheat flour (gehun ka atta) 1 tsp sesame seeds (til) 1/2 tsp chilli powder 1/4 tsp turmeric powder (haldi) 1/4 tsp asafoetida (hing) 2 tsp garlic (lehsun) paste 1 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling 2 tsp oil for cooking  For Serving low-fat curds (dahi) , made from 99.7% fat-free milk\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-apple-almond-milk-healthy-smoothie-42328r",
            "RecipeName": "Oats Apple Almond Milk Healthy Smoothie",
            "RecipeImg": "https://cdn.tarladalal.com/members/9306/big/big_oats_apple_almond_milk_healthy_smoothie-13592.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a mixer. Blend till smooth. Refrigerate for atleast 1 hour and serve chilled.\"",
            "RecipeType": "Breakfast",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 9,
            "RecipeNutrient": "\"Energy 125 cal Protein 3.9 g Carbohydrates 15.1 g Fiber 2 g Fat 4.4 g Cholesterol 8 mg Sodium 31.4 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup roughly chopped apple 1/4 cup almond milk 1/2 cup curd (dahi) 1/4 tsp cinnamon (dalchini) powder 7 ice-cubes 1 tsp maple syrup or honey\""
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeIngredient%3DPaneer
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 1386
Connection: close

{
    "Items": [
        {
            "RecipeName": "Achari Paneer",
            "RecipeStep": "For achari paneer To make achari paneer, heat the oil in a deep non-stick pan, add the fennel seeds, mustard seeds, fenugreek seeds, nigella seeds, cumin seeds and asafoetida and sauté on a medium flame for 1 minute. Add the onion and sauté on a medium flame for 2 minutes. Add the paneer, turmeric, chilli powder, black salt, mix well and cook on a medium flame for 1 minute, while stirring occasionally. Add the curds, plain flour, mix well and cook on a medium flame for 1 to 2 minutes, while stirring occasionally. Switch off the flame, add the coriander and salt and mix well. Serve the achari paneer hot with rice or rotis.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "vegetarian",
            "RecipeId": 1,
            "RecipeNutrient": "Energy 381 cal Protein 13.4 g Carbohydrates 12.8 g Fiber 0.2 g Fat 29 g Cholesterol 12 mg Sodium 16.8 mg",
            "RecipeIngredient": "For Achari Paneer 1 cup paneer (cottage cheese) cubes 1 tbsp oil 1 tsp fennel seeds (saunf) 1/4 tsp mustard seeds ( rai / sarson) 1/4 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 1/2 cup thinly sliced onions 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp black salt (sanchal) 3/4 cup whisked curds (dahi) 1 tsp plain flour (maida) 2 tbsp chopped coriander (dhania) salt to taste"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeIngredient%3Doats
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 2250
Connection: close

{
    "Items": [
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-and-cabbage-roti-40321r",
            "RecipeName": "Oats and Cabbage Roti",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_oats_and_cabbage_roti_(_tiffin_recipe)-10316.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a deep bowl and knead into a soft dough using enough water. Divide the dough into 8 equal portions. Roll out a portion of the dough into a 125 mm. (5\"\") diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook it, on a medium flame, using a little oil, till it turns golden brown in colour from both the sides. Repeat steps 3 and 4 to make 7 more rotis.  How to pack Allow it to cool completely, wrap in an aluminium foil, and pack in an air-tight tiffin box.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 7,
            "RecipeNutrient": "\"Energy 56 cal Protein 1.5 g Carbohydrates 7.7 g Fiber 1.4 g Fat 2.3 g Cholesterol 0 mg Sodium 2.6 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup grated cabbage 1/2 cup whole wheat flour (gehun ka atta) 1 tsp sesame seeds (til) 1/2 tsp chilli powder 1/4 tsp turmeric powder (haldi) 1/4 tsp asafoetida (hing) 2 tsp garlic (lehsun) paste 1 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling 2 tsp oil for cooking  For Serving low-fat curds (dahi) , made from 99.7% fat-free milk\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-apple-almond-milk-healthy-smoothie-42328r",
            "RecipeName": "Oats Apple Almond Milk Healthy Smoothie",
            "RecipeImg": "https://cdn.tarladalal.com/members/9306/big/big_oats_apple_almond_milk_healthy_smoothie-13592.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a mixer. Blend till smooth. Refrigerate for atleast 1 hour and serve chilled.\"",
            "RecipeType": "Breakfast",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 9,
            "RecipeNutrient": "\"Energy 125 cal Protein 3.9 g Carbohydrates 15.1 g Fiber 2 g Fat 4.4 g Cholesterol 8 mg Sodium 31.4 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup roughly chopped apple 1/4 cup almond milk 1/2 cup curd (dahi) 1/4 tsp cinnamon (dalchini) powder 7 ice-cubes 1 tsp maple syrup or honey\""
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeIngredient%3DOats
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeIngredient%3DCucumber
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeNutrient%3DEnergy%2056%20cal
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 1434
Connection: close

{
    "Items": [
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-and-cabbage-roti-40321r",
            "RecipeName": "Oats and Cabbage Roti",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_oats_and_cabbage_roti_(_tiffin_recipe)-10316.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a deep bowl and knead into a soft dough using enough water. Divide the dough into 8 equal portions. Roll out a portion of the dough into a 125 mm. (5\"\") diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook it, on a medium flame, using a little oil, till it turns golden brown in colour from both the sides. Repeat steps 3 and 4 to make 7 more rotis.  How to pack Allow it to cool completely, wrap in an aluminium foil, and pack in an air-tight tiffin box.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 7,
            "RecipeNutrient": "\"Energy 56 cal Protein 1.5 g Carbohydrates 7.7 g Fiber 1.4 g Fat 2.3 g Cholesterol 0 mg Sodium 2.6 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup grated cabbage 1/2 cup whole wheat flour (gehun ka atta) 1 tsp sesame seeds (til) 1/2 tsp chilli powder 1/4 tsp turmeric powder (haldi) 1/4 tsp asafoetida (hing) 2 tsp garlic (lehsun) paste 1 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling 2 tsp oil for cooking  For Serving low-fat curds (dahi) , made from 99.7% fat-free milk\""
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeNutrient%3DEnergy%2086%20cal
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 1329
Connection: close

{
    "Items": [
        {
            "RecipeUrl": "https://www.tarladalal.com/zucchini-and-carrot-pancake-38986r",
            "RecipeName": "Zucchini and Carrot Pancake",
            "RecipeImg": "https://cdn.tarladalal.com/members/9306/big/big_zucchini_and_carrot_pancake-8111.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients along with approx. ½ cup of water in a deep bowl and mix well to make a batter of pouring consistency. Grease a non-stick tava (griddle) using ½ tsp of oil, pour one ladleful of the batter on it and spread it to form 75 mm. (3”) diameter thick circle. Cook it, using ¼ tsp of oil, till it turns crisp and golden brown in colour from both sides. Repeat with the remaining batter to make 5 more pancakes. Serve immediately.  Handy tip : The quantity of water may vary depending on the quality of besan and semolina used.\"",
            "RecipeType": "Breakfast",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 8,
            "RecipeNutrient": "\"Energy 86 cal Protein 2.3 g Carbohydrates 14.1 g Fiber 1.7 g Fat 2.3 g Cholesterol 0 mg Sodium 8.4 mg\"",
            "RecipeIngredient": "\"3/4 cup thickly grated zucchini 1/4 cup thickly grated carrot 1/2 cup rice flour (chawal ka atta) 1/4 cup besan (bengal gram flour) 2 tbsp finely chopped coriander (dhania) 1 tsp finely chopped green chillies salt to taste 2 tsp oil for greasing and cooking\""
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeNutrient%3DEnergy%20200%20cal
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeNutrient%3Dprotein
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeNutrient%3Dcarbs
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeNutrient%3Dfiber
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:03 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DLunch
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 3583
Connection: close

{
    "Items": [
        {
            "RecipeName": "Achari Paneer",
            "RecipeStep": "For achari paneer To make achari paneer, heat the oil in a deep non-stick pan, add the fennel seeds, mustard seeds, fenugreek seeds, nigella seeds, cumin seeds and asafoetida and sauté on a medium flame for 1 minute. Add the onion and sauté on a medium flame for 2 minutes. Add the paneer, turmeric, chilli powder, black salt, mix well and cook on a medium flame for 1 minute, while stirring occasionally. Add the curds, plain flour, mix well and cook on a medium flame for 1 to 2 minutes, while stirring occasionally. Switch off the flame, add the coriander and salt and mix well. Serve the achari paneer hot with rice or rotis.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "vegetarian",
            "RecipeId": 1,
            "RecipeNutrient": "Energy 381 cal Protein 13.4 g Carbohydrates 12.8 g Fiber 0.2 g Fat 29 g Cholesterol 12 mg Sodium 16.8 mg",
            "RecipeIngredient": "For Achari Paneer 1 cup paneer (cottage cheese) cubes 1 tbsp oil 1 tsp fennel seeds (saunf) 1/4 tsp mustard seeds ( rai / sarson) 1/4 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 1/2 cup thinly sliced onions 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp black salt (sanchal) 3/4 cup whisked curds (dahi) 1 tsp plain flour (maida) 2 tbsp chopped coriander (dhania) salt to taste"
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/achari-baingan-30888r",
            "RecipeName": "Achari Baingan",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_achari_baingan-8524.jpg?size=696X905",
            "RecipeStep": "Combine the brinjals with the prepared marinade in a deep bowl and toss gently. Keep aside for 5 minutes. Heat the oil in a kadhai and deep-fry the marinade brinjals in it till they are golden brown in colour from all the sides. Drain on an absorbent paper and keep aside. Combine the fennel seeds, mustard seeds, fenugreek seeds, onion seeds, cumin seeds and asafoetida in a small bowl and keep aside. Heat the oil in a deep pan and add the above mixture. When the seeds crackle, add the onions, ginger-garlic paste and green chillies and sauté on a medium flame for 2 minutes. Add the turmeric powder, chilli powder, punjabi garam masala, dry mango powder and salt and sauté on a medium flame for 2 minutes. Add the curds, fried brinjals and fresh cream, mix gently and cook on a slow flame for 2 to 3 minutes, while stirring continuously. Serve hot garnished with coriander.",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 2,
            "RecipeNutrient": "Energy 215 cal Protein 3.1 g Carbohydrates 6 g Fiber 4 g Fat 19.2 g Cholesterol 6 mg Sodium 18 mg",
            "RecipeIngredient": "To Be Mixed Into A Marinade 1 tbsp ginger-garlic (adrak-lehsun) paste 1 tsp chilli powder 1/2 tsp turmeric powder (haldi) salt to taste 1 tsp oil  Other Ingredients 2 cups brinjals (baingan / eggplant) , cut into 1\"\" cubes oil for deep frying 1 tsp fennel seeds (saunf) 1 tsp mustard seeds ( rai / sarson) 1 tsp fenugreek (methi) seeds 1 tsp nigella seeds (kalonji) 1/2 tsp cumin seeds (jeera) 1/2 tsp asafoetida (hing) 2 tbsp oil 1/2 cup sliced onions 1 tsp ginger-garlic (adrak-lehsun) paste 1 tsp chopped green chillies 1/2 tsp turmeric powder (haldi) 1/2 tsp chilli powder 1/2 tsp punjabi garam masala 1/2 tsp dried mango powder (amchur) salt to taste 3/4 cup whisked curds (dahi) 1/2 cup fresh cream  For The Garnish 2 tbsp finely chopped coriander (dhania)"
        },
        {
            "RecipeId": 4,
            "RecipeName": "Chicken Gravy",
            "RecipeType": "Lunch",
            "RecipeFoodCategory": "Non-Vegetarian"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DDinner
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 1185
Connection: close

{
    "Items": [
        {
            "RecipeUrl": "https://www.tarladalal.com/ajwain-roti-ajwain-paratha-4390r",
            "RecipeName": "Ajwain Roti,",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_ajwain_roti,_ajwain_paratha-15484.jpg?size=696X905",
            "RecipeStep": "For ajwain roti To make ajwain roti, combine all the ingredients in a deep bowl and mix well. Add enough water (approx. ¾ cup) and knead into a soft dough. Cover the dough with a lid and keep aside for 15 minutes. Divide the dough into 10 equal portions and roll out each portion of the dough into a 175 mm. (7”) diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook the roti using a little ghee, till golden brown spots appear on both the sides. Serve the ajwain roti immediately.",
            "RecipeType": "Dinner",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 3,
            "RecipeNutrient": "Energy 147 cal Protein 3.1 g Carbohydrates 18.9 g Fiber 3.2 g Fat 7 g Cholesterol 0 mg Sodium 5.2 mg",
            "RecipeIngredient": "For Ajwain Roti 2 cups whole wheat flour (gehun ka atta) 1 tbsp carom seeds (ajwain) 3 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling ghee for cooking"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DSnack
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 120
Connection: close

{
    "Items": [
        {
            "RecipeId": 5,
            "RecipeName": "Fish Tikka",
            "RecipeType": "Snack",
            "RecipeFoodCategory": "Non-Vegetarian"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DMain%20Course
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 2864
Connection: close

{
    "Items": [
        {
            "RecipeUrl": "https://www.tarladalal.com/val-dal-khichdi--know-your-dals-and-pulses--32822r",
            "RecipeName": "Val Dal Khichdi ( Know Your Dals and Pulses )",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_val-dal-khichdi-(-know-your-dals-and-pulses-)-1649.jpg?size=500X662",
            "RecipeStep": "\"Soak the vaal dal and rice in enough water for 10 minutes. Drain and keep aside. Heat the ghee in a pressure cooker and add the cumin seeds, cloves, cinnamon and bayleaves. When the cumin seeds crackele, add all the vegetables, turmeric powder, chilli powder, garam masala and salt and mix well. Add the rice and vaal dal and sauté on a medium flame till the ghee coats the grains evenly. Add 4 cups of hot water, stir well and pressure cook for at least 3 whistles. Allow the steam to escape before opening the lid. Serve hot with raita / kadhi / papad.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 6,
            "RecipeIngredient": "\"1 cup vaal dal (split field beans/ split butter beans) 1 cup rice (chawal) 1/2 cup ghee 1/2 tsp cumin seeds (jeera) 3 to 4 cloves (laung / lavang) 2 sticks cinnamon (dalchini) 2 bayleaves 1 cup cauliflower florets 3/4 cup brinjal (baingan / eggplant) cubes 3/4 cup potato cubes 3/4 cup french beans , cut into 1” pieces 1/2 cup onion cubes 1/2 cup green peas 1/2 tsp turmeric powder (haldi) 1 tsp chilli powder 1/2 tsp garam masala salt to taste\""
        },
        {
            "RecipeUrl": "https://www.tarladalal.com/oats-and-cabbage-roti-40321r",
            "RecipeName": "Oats and Cabbage Roti",
            "RecipeImg": "https://www.tarladalal.com/members/9306/big/big_oats_and_cabbage_roti_(_tiffin_recipe)-10316.jpg?size=696X905",
            "RecipeStep": "\"Combine all the ingredients in a deep bowl and knead into a soft dough using enough water. Divide the dough into 8 equal portions. Roll out a portion of the dough into a 125 mm. (5\"\") diameter circle using a little whole wheat flour for rolling. Heat a non-stick tava (griddle) and cook it, on a medium flame, using a little oil, till it turns golden brown in colour from both the sides. Repeat steps 3 and 4 to make 7 more rotis.  How to pack Allow it to cool completely, wrap in an aluminium foil, and pack in an air-tight tiffin box.\"",
            "RecipeType": "Main Course",
            "RecipeFoodCategory": "Vegetarian",
            "RecipeId": 7,
            "RecipeNutrient": "\"Energy 56 cal Protein 1.5 g Carbohydrates 7.7 g Fiber 1.4 g Fat 2.3 g Cholesterol 0 mg Sodium 2.6 mg\"",
            "RecipeIngredient": "\"1/4 cup quick cooking rolled oats 1/2 cup grated cabbage 1/2 cup whole wheat flour (gehun ka atta) 1 tsp sesame seeds (til) 1/2 tsp chilli powder 1/4 tsp turmeric powder (haldi) 1/4 tsp asafoetida (hing) 2 tsp garlic (lehsun) paste 1 tsp oil salt to taste whole wheat flour (gehun ka atta) for rolling 2 tsp oil for cooking  For Serving low-fat curds (dahi) , made from 99.7% fat-free milk\""
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3Dlunch
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3Ddinner
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3Dsnack
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3Dmain%20course
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DMainCourse
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DBrunch
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DMeals
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Recipes/RecipeType%3DLunch%26Dinner
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3DDT001%26UserId%3DPT0001
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:04 GMT
Content-Type: application/json
Content-Length: 61
Connection: close

{
    "Message": "Already Deleted OR wrong DieticinaId ,UserId."
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/users/DieticianId%3DDT001%26UserId%3DPT0001
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3DXXX01%26UserId%3DPT0001
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 61
Connection: close

{
    "Message": "Already Deleted OR wrong DieticinaId ,UserId."
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3DXXX01%26UserId%3DXXXX01
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 61
Connection: close

{
    "Message": "Already Deleted OR wrong DieticinaId ,UserId."
}
Request method:	DELETE
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3DDT001%26UserId%3DXXXX01
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 61
Connection: close

{
    "Message": "Already Deleted OR wrong DieticinaId ,UserId."
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 15562
Connection: close

{
    "Items": [
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "srrightht@com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "HondaCivic",
            "UserId": "PT5197",
            "LastName": "HondaCivic",
            "Contact": "365678"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "srrightht@com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "HondaCivic",
            "UserId": "PT7405",
            "LastName": "HondaCivic",
            "Contact": "36548593321"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "barbie@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "Doll House",
                    "Country": "USA",
                    "Address1": "Land Lord",
                    "City": "Dolly",
                    "State": "TN"
                }
            },
            "FirstName": "Barbie",
            "UserId": "DT001",
            "LastName": "Dolly",
            "Contact": "101099312"
        },
        {
            "Allergy": "Nut",
            "FoodCategory": "Vegetarian",
            "Email": "MarryPop@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Mountain",
                    "Country": "USA",
                    "Address1": "Umberlla Town",
                    "City": "Magic",
                    "State": "KN"
                }
            },
            "FirstName": "Marry",
            "UserId": "PT0002",
            "LastName": "Poppins",
            "Contact": "12346787"
        },
        {
            "Allergy": "Milk,Egg",
            "FoodCategory": "Non-vegetarian",
            "Email": "Pantha@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Hall Mountain",
                    "Country": "USA",
                    "Address1": "SuperLand",
                    "City": "Comedy",
                    "State": "TN"
                }
            },
            "FirstName": "Pink",
            "UserId": "PT0003",
            "LastName": "Panthar",
            "Contact": "194322234"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "joker@gamil.com",
            "Address": {
                "Address": {
                    "Address2": "45 House",
                    "Country": "USA",
                    "Address1": "Joker Mall",
                    "City": "DC",
                    "State": "TN"
                }
            },
            "FirstName": "Joker",
            "UserId": "PT0004",
            "LastName": "DC",
            "Contact": "128498656"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "batman@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "45 House",
                    "Country": "USA",
                    "Address1": "DC Mall",
                    "City": "DC",
                    "State": "FL"
                }
            },
            "FirstName": "Batman",
            "UserId": "PT0005",
            "LastName": "D.C",
            "Contact": "239850903"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "cling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "David",
            "UserId": "PT8443",
            "LastName": "David",
            "Contact": "56394"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "veg",
            "Email": "like2@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ae",
            "UserId": "DT7086",
            "LastName": "ae",
            "Contact": "35984562"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "@#$",
            "Email": "like4@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ag",
            "UserId": "DT4309",
            "LastName": "ag",
            "Contact": "6325987"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "busy@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "$%&",
                "State": "FL"
            },
            "FirstName": "Avenger",
            "UserId": "PT9855",
            "LastName": "Avenger",
            "Contact": "592748"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "save@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "White",
            "UserId": "DT586",
            "LastName": "White",
            "Contact": "@$%"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ring@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Paw",
            "UserId": "PT8322",
            "LastName": "Paw",
            "Contact": "9837484"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like23@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "aab",
            "UserId": "DT2509",
            "LastName": "aab",
            "Contact": "565465476"
        },
        {
            "Email": "Mjr@yahoo.com",
            "LastName": "Jr",
            "FirstName": "Miller\t",
            "UserId": "DT004",
            "Contact": "4012345678"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Barbie Doll",
            "UserId": "PT5916",
            "LastName": "Barbie Doll",
            "Contact": "5546546"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "gave@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": ""
            },
            "FirstName": "Amy",
            "UserId": "DT3781",
            "LastName": "Amy",
            "Contact": "40827"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "help@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "*?$!",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Ardan",
            "UserId": "PT8196",
            "LastName": "Ardan",
            "Contact": "9752"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "zing@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Messi$",
            "UserId": "PT904",
            "LastName": "Messi$",
            "Contact": "8726473"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "non",
            "Email": "lik1@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ad",
            "UserId": "PT6603",
            "LastName": "ad",
            "Contact": "15235956"
        },
        {
            "Allergy": "^&*$",
            "FoodCategory": "vegetarian",
            "Email": "like9@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "al",
            "UserId": "PT7371",
            "LastName": "al",
            "Contact": "7025630"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "non748",
            "Email": "like6@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ai",
            "UserId": "DT7996",
            "LastName": "ai",
            "Contact": "452308"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "wing@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "9843",
            "UserId": "PT8579",
            "LastName": "9843",
            "Contact": "483947"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "@$&*?{}",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Green",
            "UserId": "PT1458",
            "LastName": "Green",
            "Contact": "458652"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "have@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "3937",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Megan",
            "UserId": "PT9050",
            "LastName": "Megan",
            "Contact": "39836"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "hsdudsjsduw",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ac",
            "UserId": "DT7207",
            "LastName": "ac",
            "Contact": "758963258"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "eling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Sophia",
            "UserId": "PT3331",
            "LastName": "Sophia",
            "Contact": "2345436"
        },
        {
            "Allergy": "Nut",
            "FoodCategory": "Vegetarian",
            "Email": "email@gmail.com",
            "Address": {
                "Address2": "East Union ave",
                "Country": "",
                "Address1": "25635 new recheilt road",
                "City": "New Jeresy",
                "State": "New Milford"
            },
            "FirstName": "car",
            "UserId": "PT7196",
            "LastName": "car",
            "Contact": "3562598656"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ping@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "John475",
            "UserId": "PT7255",
            "LastName": "John475",
            "Contact": "749374"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "area@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "INDIA984",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Willa",
            "UserId": "PT249",
            "LastName": "Willa",
            "Contact": "35728"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "acid@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "TX57"
            },
            "FirstName": "Lucy",
            "UserId": "PT4916",
            "LastName": "Lucy",
            "Contact": "2648"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "wind@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "",
                "State": "FL"
            },
            "FirstName": "Zoe",
            "UserId": "DT886",
            "LastName": "Zoe",
            "Contact": "5756048"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "card@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "7834"
            },
            "FirstName": "Jessia",
            "UserId": "PT6678",
            "LastName": "Jessia",
            "Contact": "9837"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Wren",
            "UserId": "PT4899",
            "LastName": "Wren",
            "Contact": "567$"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "984639",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Blue",
            "UserId": "DT9061",
            "LastName": "Blue",
            "Contact": "897384"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like24@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "aac",
            "UserId": "DT8253",
            "LastName": "aac",
            "Contact": "565465476"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "link@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Piper",
            "UserId": "DT9269",
            "LastName": "Piper",
            "Contact": "8242"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ding@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Emma",
            "UserId": "PT9803",
            "LastName": "Emma",
            "Contact": "2345466"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "veg%",
            "Email": "like5@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ah",
            "UserId": "PT1511",
            "LastName": "ah",
            "Contact": "1589632"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "blng@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "@#$",
            "UserId": "PT7916",
            "LastName": "@#$",
            "Contact": "33445435"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "Wonder@g.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "planet red",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Wonder",
            "UserId": "PT0011",
            "LastName": "Women",
            "Contact": "345678190"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "jb@outlook.com",
            "LastName": "Bond",
            "FirstName": "James",
            "UserId": "PT0012",
            "Contact": "345678122"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "potter@magic.com",
            "Address": {
                "Address": {
                    "Address2": "Black sea",
                    "Country": "UK",
                    "Address1": "Howard",
                    "City": "Ocean",
                    "State": "TN"
                }
            },
            "FirstName": "Harry",
            "UserId": "PT0013",
            "LastName": "Potter",
            "Contact": "345678333"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "ron@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "Magic land",
                    "Country": "USA",
                    "Address1": "Howard Land",
                    "City": "block 1",
                    "State": "MI"
                }
            },
            "FirstName": "Ron",
            "UserId": "PT0014",
            "LastName": "Wisley",
            "Contact": "345678444"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "snape@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Magic land",
                    "Country": "USA",
                    "Address1": "Sirius Land",
                    "City": "block 121",
                    "State": "MI"
                }
            },
            "FirstName": "Severse",
            "UserId": "PT0015",
            "LastName": "Snap",
            "Contact": "345678555"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "only@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Max",
            "UserId": "PT5042",
            "LastName": "Max",
            "Contact": "alphabet"
        },
        {
            "FoodCategory": "Non-vegetarian",
            "Email": "suee@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "450 capital",
                    "Country": "USA",
                    "Address1": "planet Suee",
                    "City": "lake",
                    "State": "GA"
                }
            },
            "FirstName": "Suees",
            "UserId": "DT002",
            "LastName": "Dr",
            "Contact": "201980234"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "captain@outllok.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "capAmerica",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Captian",
            "UserId": "PT0006",
            "LastName": "America",
            "Contact": "234083554"
        },
        {
            "Allergy": "Milk",
            "FoodCategory": "Vegetarian",
            "Email": "gitrl@outlook.com",
            "Address": {
                "Address": {
                    "Address2": "Aliean",
                    "Country": "UK009",
                    "Address1": "Space",
                    "City": "x Galaxy",
                    "State": "TN"
                }
            },
            "FirstName": "Super",
            "UserId": "PT0007",
            "LastName": "Girl",
            "Contact": "234083664"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "gamora@net.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "America",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Gamora",
            "UserId": "PT0008",
            "LastName": "Marvel",
            "Contact": "234083689"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "bwidow@znet.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "Russia",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Black",
            "UserId": "PT0009",
            "LastName": "Widow",
            "Contact": "234081111"
        },
        {
            "FoodCategory": "Non-vegetarian",
            "Email": "cap@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "planet red",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Captian",
            "UserId": "PT0010",
            "LastName": "Marvel",
            "Contact": "234083234"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "blue@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "1234",
                "State": "FL"
            },
            "FirstName": "Don",
            "UserId": "DT6224",
            "LastName": "Don",
            "Contact": "493659"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "game@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "$%@"
            },
            "FirstName": "Ruby",
            "UserId": "DT6686",
            "LastName": "Ruby",
            "Contact": "829038"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "step@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "nash*$",
                "State": "FL"
            },
            "FirstName": "Lily",
            "UserId": "PT2248",
            "LastName": "Lily",
            "Contact": "493048"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "8798",
            "Email": "like3@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "af",
            "UserId": "DT722",
            "LastName": "af",
            "Contact": "45896522"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ring@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "vin984",
                "State": "FL"
            },
            "FirstName": "Mia",
            "UserId": "PT8445",
            "LastName": "Mia",
            "Contact": "603820"
        },
        {
            "Allergy": "8989",
            "FoodCategory": "vegetarian",
            "Email": "like8@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ak",
            "UserId": "DT7509",
            "LastName": "ak",
            "Contact": "1203482"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/FirstName%3DNumpycode
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 31
Connection: close

{
    "Message": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/FirstName%3DAnkitha
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 31
Connection: close

{
    "Message": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/FirstName%3D1234
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 31
Connection: close

{
    "Message": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/FirstName%3DnumpyCode
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 31
Connection: close

{
    "Message": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/FirstName%3D%40%40%40%26%5E%28%29
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 31
Connection: close

{
    "Message": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/FirstName%3DNUMPYCODE
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 31
Connection: close

{
    "Message": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/Contact%3D234083689
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:05 GMT
Content-Type: application/json
Content-Length: 282
Connection: close

{
    "Items": [
        {
            "FoodCategory": "Vegetarian",
            "Email": "gamora@net.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "America",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Gamora",
            "UserId": "PT0008",
            "LastName": "Marvel",
            "Contact": "234083689"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/Contact%3D%40%40%40%40%40
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/Contact%3Dabcdegfhegf
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/Contact%3D1234abcdef
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/Email%3DMailme%40Numpycode
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/Email%3D1222abcd
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/Email%3Dmailme%40numpycode
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3DDietician
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 4963
Connection: close

{
    "Items": [
        {
            "FoodCategory": "Vegetarian",
            "Email": "barbie@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "Doll House",
                    "Country": "USA",
                    "Address1": "Land Lord",
                    "City": "Dolly",
                    "State": "TN"
                }
            },
            "FirstName": "Barbie",
            "UserId": "DT001",
            "LastName": "Dolly",
            "Contact": "101099312"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "veg",
            "Email": "like2@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ae",
            "UserId": "DT7086",
            "LastName": "ae",
            "Contact": "35984562"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "@#$",
            "Email": "like4@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ag",
            "UserId": "DT4309",
            "LastName": "ag",
            "Contact": "6325987"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "save@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "White",
            "UserId": "DT586",
            "LastName": "White",
            "Contact": "@$%"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like23@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "aab",
            "UserId": "DT2509",
            "LastName": "aab",
            "Contact": "565465476"
        },
        {
            "Email": "Mjr@yahoo.com",
            "LastName": "Jr",
            "FirstName": "Miller\t",
            "UserId": "DT004",
            "Contact": "4012345678"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "gave@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": ""
            },
            "FirstName": "Amy",
            "UserId": "DT3781",
            "LastName": "Amy",
            "Contact": "40827"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "non748",
            "Email": "like6@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ai",
            "UserId": "DT7996",
            "LastName": "ai",
            "Contact": "452308"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "hsdudsjsduw",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ac",
            "UserId": "DT7207",
            "LastName": "ac",
            "Contact": "758963258"
        },
        {
            "Allergy": "nuts",
            "FoodCategory": "Vegetarian",
            "Email": "email@gmail.com",
            "Address": {
                "country": "us",
                "state": "greenwood",
                "city": "string",
                "address2": "string",
                "address1": "string"
            },
            "FirstName": "email",
            "UserId": "DT-1368967099",
            "LastName": "google",
            "Contact": "82345265"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "wind@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "",
                "State": "FL"
            },
            "FirstName": "Zoe",
            "UserId": "DT886",
            "LastName": "Zoe",
            "Contact": "5756048"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "984639",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Blue",
            "UserId": "DT9061",
            "LastName": "Blue",
            "Contact": "897384"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like24@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "aac",
            "UserId": "DT8253",
            "LastName": "aac",
            "Contact": "565465476"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "link@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Piper",
            "UserId": "DT9269",
            "LastName": "Piper",
            "Contact": "8242"
        },
        {
            "FoodCategory": "Non-vegetarian",
            "Email": "suee@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "450 capital",
                    "Country": "USA",
                    "Address1": "planet Suee",
                    "City": "lake",
                    "State": "GA"
                }
            },
            "FirstName": "Suees",
            "UserId": "DT002",
            "LastName": "Dr",
            "Contact": "201980234"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "blue@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "1234",
                "State": "FL"
            },
            "FirstName": "Don",
            "UserId": "DT6224",
            "LastName": "Don",
            "Contact": "493659"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "game@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "$%@"
            },
            "FirstName": "Ruby",
            "UserId": "DT6686",
            "LastName": "Ruby",
            "Contact": "829038"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "8798",
            "Email": "like3@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "af",
            "UserId": "DT722",
            "LastName": "af",
            "Contact": "45896522"
        },
        {
            "Allergy": "8989",
            "FoodCategory": "vegetarian",
            "Email": "like8@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ak",
            "UserId": "DT7509",
            "LastName": "ak",
            "Contact": "1203482"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3DPatient
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 10898
Connection: close

{
    "Items": [
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "srrightht@com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "HondaCivic",
            "UserId": "PT5197",
            "LastName": "HondaCivic",
            "Contact": "365678"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "srrightht@com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "HondaCivic",
            "UserId": "PT7405",
            "LastName": "HondaCivic",
            "Contact": "36548593321"
        },
        {
            "Allergy": "Nut",
            "FoodCategory": "Vegetarian",
            "Email": "MarryPop@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Mountain",
                    "Country": "USA",
                    "Address1": "Umberlla Town",
                    "City": "Magic",
                    "State": "KN"
                }
            },
            "FirstName": "Marry",
            "UserId": "PT0002",
            "LastName": "Poppins",
            "Contact": "12346787"
        },
        {
            "Allergy": "Milk,Egg",
            "FoodCategory": "Non-vegetarian",
            "Email": "Pantha@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Hall Mountain",
                    "Country": "USA",
                    "Address1": "SuperLand",
                    "City": "Comedy",
                    "State": "TN"
                }
            },
            "FirstName": "Pink",
            "UserId": "PT0003",
            "LastName": "Panthar",
            "Contact": "194322234"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "joker@gamil.com",
            "Address": {
                "Address": {
                    "Address2": "45 House",
                    "Country": "USA",
                    "Address1": "Joker Mall",
                    "City": "DC",
                    "State": "TN"
                }
            },
            "FirstName": "Joker",
            "UserId": "PT0004",
            "LastName": "DC",
            "Contact": "128498656"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "batman@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "45 House",
                    "Country": "USA",
                    "Address1": "DC Mall",
                    "City": "DC",
                    "State": "FL"
                }
            },
            "FirstName": "Batman",
            "UserId": "PT0005",
            "LastName": "D.C",
            "Contact": "239850903"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "cling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "David",
            "UserId": "PT8443",
            "LastName": "David",
            "Contact": "56394"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "busy@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "$%&",
                "State": "FL"
            },
            "FirstName": "Avenger",
            "UserId": "PT9855",
            "LastName": "Avenger",
            "Contact": "592748"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ring@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Paw",
            "UserId": "PT8322",
            "LastName": "Paw",
            "Contact": "9837484"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Barbie Doll",
            "UserId": "PT5916",
            "LastName": "Barbie Doll",
            "Contact": "5546546"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "help@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "*?$!",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Ardan",
            "UserId": "PT8196",
            "LastName": "Ardan",
            "Contact": "9752"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "zing@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Messi$",
            "UserId": "PT904",
            "LastName": "Messi$",
            "Contact": "8726473"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "non",
            "Email": "lik1@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ad",
            "UserId": "PT6603",
            "LastName": "ad",
            "Contact": "15235956"
        },
        {
            "Allergy": "^&*$",
            "FoodCategory": "vegetarian",
            "Email": "like9@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "al",
            "UserId": "PT7371",
            "LastName": "al",
            "Contact": "7025630"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "wing@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "9843",
            "UserId": "PT8579",
            "LastName": "9843",
            "Contact": "483947"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "@$&*?{}",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Green",
            "UserId": "PT1458",
            "LastName": "Green",
            "Contact": "458652"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "have@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "3937",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Megan",
            "UserId": "PT9050",
            "LastName": "Megan",
            "Contact": "39836"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "eling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Sophia",
            "UserId": "PT3331",
            "LastName": "Sophia",
            "Contact": "2345436"
        },
        {
            "Allergy": "Nut",
            "FoodCategory": "Vegetarian",
            "Email": "email@gmail.com",
            "Address": {
                "Address2": "East Union ave",
                "Country": "",
                "Address1": "25635 new recheilt road",
                "City": "New Jeresy",
                "State": "New Milford"
            },
            "FirstName": "car",
            "UserId": "PT7196",
            "LastName": "car",
            "Contact": "3562598656"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ping@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "John475",
            "UserId": "PT7255",
            "LastName": "John475",
            "Contact": "749374"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "area@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "INDIA984",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Willa",
            "UserId": "PT249",
            "LastName": "Willa",
            "Contact": "35728"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "acid@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "TX57"
            },
            "FirstName": "Lucy",
            "UserId": "PT4916",
            "LastName": "Lucy",
            "Contact": "2648"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "card@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "7834"
            },
            "FirstName": "Jessia",
            "UserId": "PT6678",
            "LastName": "Jessia",
            "Contact": "9837"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Wren",
            "UserId": "PT4899",
            "LastName": "Wren",
            "Contact": "567$"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ding@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Emma",
            "UserId": "PT9803",
            "LastName": "Emma",
            "Contact": "2345466"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "veg%",
            "Email": "like5@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ah",
            "UserId": "PT1511",
            "LastName": "ah",
            "Contact": "1589632"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "blng@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "@#$",
            "UserId": "PT7916",
            "LastName": "@#$",
            "Contact": "33445435"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "Wonder@g.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "planet red",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Wonder",
            "UserId": "PT0011",
            "LastName": "Women",
            "Contact": "345678190"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "jb@outlook.com",
            "LastName": "Bond",
            "FirstName": "James",
            "UserId": "PT0012",
            "Contact": "345678122"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "potter@magic.com",
            "Address": {
                "Address": {
                    "Address2": "Black sea",
                    "Country": "UK",
                    "Address1": "Howard",
                    "City": "Ocean",
                    "State": "TN"
                }
            },
            "FirstName": "Harry",
            "UserId": "PT0013",
            "LastName": "Potter",
            "Contact": "345678333"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "ron@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "Magic land",
                    "Country": "USA",
                    "Address1": "Howard Land",
                    "City": "block 1",
                    "State": "MI"
                }
            },
            "FirstName": "Ron",
            "UserId": "PT0014",
            "LastName": "Wisley",
            "Contact": "345678444"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "snape@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Magic land",
                    "Country": "USA",
                    "Address1": "Sirius Land",
                    "City": "block 121",
                    "State": "MI"
                }
            },
            "FirstName": "Severse",
            "UserId": "PT0015",
            "LastName": "Snap",
            "Contact": "345678555"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "only@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Max",
            "UserId": "PT5042",
            "LastName": "Max",
            "Contact": "alphabet"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "captain@outllok.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "capAmerica",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Captian",
            "UserId": "PT0006",
            "LastName": "America",
            "Contact": "234083554"
        },
        {
            "Allergy": "Milk",
            "FoodCategory": "Vegetarian",
            "Email": "gitrl@outlook.com",
            "Address": {
                "Address": {
                    "Address2": "Aliean",
                    "Country": "UK009",
                    "Address1": "Space",
                    "City": "x Galaxy",
                    "State": "TN"
                }
            },
            "FirstName": "Super",
            "UserId": "PT0007",
            "LastName": "Girl",
            "Contact": "234083664"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "gamora@net.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "America",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Gamora",
            "UserId": "PT0008",
            "LastName": "Marvel",
            "Contact": "234083689"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "bwidow@znet.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "Russia",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Black",
            "UserId": "PT0009",
            "LastName": "Widow",
            "Contact": "234081111"
        },
        {
            "FoodCategory": "Non-vegetarian",
            "Email": "cap@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "planet red",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Captian",
            "UserId": "PT0010",
            "LastName": "Marvel",
            "Contact": "234083234"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "step@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "nash*$",
                "State": "FL"
            },
            "FirstName": "Lily",
            "UserId": "PT2248",
            "LastName": "Lily",
            "Contact": "493048"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ring@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "vin984",
                "State": "FL"
            },
            "FirstName": "Mia",
            "UserId": "PT8445",
            "LastName": "Mia",
            "Contact": "603820"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3DDiet
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 4963
Connection: close

{
    "Items": [
        {
            "FoodCategory": "Vegetarian",
            "Email": "barbie@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "Doll House",
                    "Country": "USA",
                    "Address1": "Land Lord",
                    "City": "Dolly",
                    "State": "TN"
                }
            },
            "FirstName": "Barbie",
            "UserId": "DT001",
            "LastName": "Dolly",
            "Contact": "101099312"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "veg",
            "Email": "like2@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ae",
            "UserId": "DT7086",
            "LastName": "ae",
            "Contact": "35984562"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "@#$",
            "Email": "like4@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ag",
            "UserId": "DT4309",
            "LastName": "ag",
            "Contact": "6325987"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "save@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "White",
            "UserId": "DT586",
            "LastName": "White",
            "Contact": "@$%"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like23@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "aab",
            "UserId": "DT2509",
            "LastName": "aab",
            "Contact": "565465476"
        },
        {
            "Email": "Mjr@yahoo.com",
            "LastName": "Jr",
            "FirstName": "Miller\t",
            "UserId": "DT004",
            "Contact": "4012345678"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "gave@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": ""
            },
            "FirstName": "Amy",
            "UserId": "DT3781",
            "LastName": "Amy",
            "Contact": "40827"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "non748",
            "Email": "like6@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ai",
            "UserId": "DT7996",
            "LastName": "ai",
            "Contact": "452308"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "hsdudsjsduw",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ac",
            "UserId": "DT7207",
            "LastName": "ac",
            "Contact": "758963258"
        },
        {
            "Allergy": "nuts",
            "FoodCategory": "Vegetarian",
            "Email": "email@gmail.com",
            "Address": {
                "country": "us",
                "state": "greenwood",
                "city": "string",
                "address2": "string",
                "address1": "string"
            },
            "FirstName": "email",
            "UserId": "DT-1368967099",
            "LastName": "google",
            "Contact": "82345265"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "wind@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "",
                "State": "FL"
            },
            "FirstName": "Zoe",
            "UserId": "DT886",
            "LastName": "Zoe",
            "Contact": "5756048"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "984639",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Blue",
            "UserId": "DT9061",
            "LastName": "Blue",
            "Contact": "897384"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like24@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "aac",
            "UserId": "DT8253",
            "LastName": "aac",
            "Contact": "565465476"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "link@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Piper",
            "UserId": "DT9269",
            "LastName": "Piper",
            "Contact": "8242"
        },
        {
            "FoodCategory": "Non-vegetarian",
            "Email": "suee@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "450 capital",
                    "Country": "USA",
                    "Address1": "planet Suee",
                    "City": "lake",
                    "State": "GA"
                }
            },
            "FirstName": "Suees",
            "UserId": "DT002",
            "LastName": "Dr",
            "Contact": "201980234"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "blue@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "1234",
                "State": "FL"
            },
            "FirstName": "Don",
            "UserId": "DT6224",
            "LastName": "Don",
            "Contact": "493659"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "game@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "$%@"
            },
            "FirstName": "Ruby",
            "UserId": "DT6686",
            "LastName": "Ruby",
            "Contact": "829038"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "8798",
            "Email": "like3@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "af",
            "UserId": "DT722",
            "LastName": "af",
            "Contact": "45896522"
        },
        {
            "Allergy": "8989",
            "FoodCategory": "vegetarian",
            "Email": "like8@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ak",
            "UserId": "DT7509",
            "LastName": "ak",
            "Contact": "1203482"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3DLike
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3Ddietician
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:06 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3DPatie
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 10898
Connection: close

{
    "Items": [
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "srrightht@com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "HondaCivic",
            "UserId": "PT5197",
            "LastName": "HondaCivic",
            "Contact": "365678"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "srrightht@com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "HondaCivic",
            "UserId": "PT7405",
            "LastName": "HondaCivic",
            "Contact": "36548593321"
        },
        {
            "Allergy": "Nut",
            "FoodCategory": "Vegetarian",
            "Email": "MarryPop@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Mountain",
                    "Country": "USA",
                    "Address1": "Umberlla Town",
                    "City": "Magic",
                    "State": "KN"
                }
            },
            "FirstName": "Marry",
            "UserId": "PT0002",
            "LastName": "Poppins",
            "Contact": "12346787"
        },
        {
            "Allergy": "Milk,Egg",
            "FoodCategory": "Non-vegetarian",
            "Email": "Pantha@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Hall Mountain",
                    "Country": "USA",
                    "Address1": "SuperLand",
                    "City": "Comedy",
                    "State": "TN"
                }
            },
            "FirstName": "Pink",
            "UserId": "PT0003",
            "LastName": "Panthar",
            "Contact": "194322234"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "joker@gamil.com",
            "Address": {
                "Address": {
                    "Address2": "45 House",
                    "Country": "USA",
                    "Address1": "Joker Mall",
                    "City": "DC",
                    "State": "TN"
                }
            },
            "FirstName": "Joker",
            "UserId": "PT0004",
            "LastName": "DC",
            "Contact": "128498656"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "batman@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "45 House",
                    "Country": "USA",
                    "Address1": "DC Mall",
                    "City": "DC",
                    "State": "FL"
                }
            },
            "FirstName": "Batman",
            "UserId": "PT0005",
            "LastName": "D.C",
            "Contact": "239850903"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "cling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "David",
            "UserId": "PT8443",
            "LastName": "David",
            "Contact": "56394"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "busy@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "$%&",
                "State": "FL"
            },
            "FirstName": "Avenger",
            "UserId": "PT9855",
            "LastName": "Avenger",
            "Contact": "592748"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ring@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Paw",
            "UserId": "PT8322",
            "LastName": "Paw",
            "Contact": "9837484"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Barbie Doll",
            "UserId": "PT5916",
            "LastName": "Barbie Doll",
            "Contact": "5546546"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "help@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "*?$!",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Ardan",
            "UserId": "PT8196",
            "LastName": "Ardan",
            "Contact": "9752"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "zing@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Messi$",
            "UserId": "PT904",
            "LastName": "Messi$",
            "Contact": "8726473"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "non",
            "Email": "lik1@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ad",
            "UserId": "PT6603",
            "LastName": "ad",
            "Contact": "15235956"
        },
        {
            "Allergy": "^&*$",
            "FoodCategory": "vegetarian",
            "Email": "like9@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "al",
            "UserId": "PT7371",
            "LastName": "al",
            "Contact": "7025630"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "wing@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "9843",
            "UserId": "PT8579",
            "LastName": "9843",
            "Contact": "483947"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "@$&*?{}",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Green",
            "UserId": "PT1458",
            "LastName": "Green",
            "Contact": "458652"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "have@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "3937",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Megan",
            "UserId": "PT9050",
            "LastName": "Megan",
            "Contact": "39836"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "eling@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Sophia",
            "UserId": "PT3331",
            "LastName": "Sophia",
            "Contact": "2345436"
        },
        {
            "Allergy": "Nut",
            "FoodCategory": "Vegetarian",
            "Email": "email@gmail.com",
            "Address": {
                "Address2": "East Union ave",
                "Country": "",
                "Address1": "25635 new recheilt road",
                "City": "New Jeresy",
                "State": "New Milford"
            },
            "FirstName": "car",
            "UserId": "PT7196",
            "LastName": "car",
            "Contact": "3562598656"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ping@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "John475",
            "UserId": "PT7255",
            "LastName": "John475",
            "Contact": "749374"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "area@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "INDIA984",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Willa",
            "UserId": "PT249",
            "LastName": "Willa",
            "Contact": "35728"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "acid@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "TX57"
            },
            "FirstName": "Lucy",
            "UserId": "PT4916",
            "LastName": "Lucy",
            "Contact": "2648"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "card@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "7834"
            },
            "FirstName": "Jessia",
            "UserId": "PT6678",
            "LastName": "Jessia",
            "Contact": "9837"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "like@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Wren",
            "UserId": "PT4899",
            "LastName": "Wren",
            "Contact": "567$"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ding@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Emma",
            "UserId": "PT9803",
            "LastName": "Emma",
            "Contact": "2345466"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "veg%",
            "Email": "like5@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "ah",
            "UserId": "PT1511",
            "LastName": "ah",
            "Contact": "1589632"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "blng@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "@#$",
            "UserId": "PT7916",
            "LastName": "@#$",
            "Contact": "33445435"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "Wonder@g.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "planet red",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Wonder",
            "UserId": "PT0011",
            "LastName": "Women",
            "Contact": "345678190"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "jb@outlook.com",
            "LastName": "Bond",
            "FirstName": "James",
            "UserId": "PT0012",
            "Contact": "345678122"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "potter@magic.com",
            "Address": {
                "Address": {
                    "Address2": "Black sea",
                    "Country": "UK",
                    "Address1": "Howard",
                    "City": "Ocean",
                    "State": "TN"
                }
            },
            "FirstName": "Harry",
            "UserId": "PT0013",
            "LastName": "Potter",
            "Contact": "345678333"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "ron@gmail.com",
            "Address": {
                "Address": {
                    "Address2": "Magic land",
                    "Country": "USA",
                    "Address1": "Howard Land",
                    "City": "block 1",
                    "State": "MI"
                }
            },
            "FirstName": "Ron",
            "UserId": "PT0014",
            "LastName": "Wisley",
            "Contact": "345678444"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "snape@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "Magic land",
                    "Country": "USA",
                    "Address1": "Sirius Land",
                    "City": "block 121",
                    "State": "MI"
                }
            },
            "FirstName": "Severse",
            "UserId": "PT0015",
            "LastName": "Snap",
            "Contact": "345678555"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "only@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "black sea",
                "State": "FL"
            },
            "FirstName": "Max",
            "UserId": "PT5042",
            "LastName": "Max",
            "Contact": "alphabet"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "captain@outllok.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "capAmerica",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Captian",
            "UserId": "PT0006",
            "LastName": "America",
            "Contact": "234083554"
        },
        {
            "Allergy": "Milk",
            "FoodCategory": "Vegetarian",
            "Email": "gitrl@outlook.com",
            "Address": {
                "Address": {
                    "Address2": "Aliean",
                    "Country": "UK009",
                    "Address1": "Space",
                    "City": "x Galaxy",
                    "State": "TN"
                }
            },
            "FirstName": "Super",
            "UserId": "PT0007",
            "LastName": "Girl",
            "Contact": "234083664"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "gamora@net.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "America",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Gamora",
            "UserId": "PT0008",
            "LastName": "Marvel",
            "Contact": "234083689"
        },
        {
            "FoodCategory": "Vegetarian",
            "Email": "bwidow@znet.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "Russia",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Black",
            "UserId": "PT0009",
            "LastName": "Widow",
            "Contact": "234081111"
        },
        {
            "FoodCategory": "Non-vegetarian",
            "Email": "cap@yahoo.com",
            "Address": {
                "Address": {
                    "Address2": "45 capital",
                    "Country": "USA",
                    "Address1": "planet red",
                    "City": "DC",
                    "State": "DC"
                }
            },
            "FirstName": "Captian",
            "UserId": "PT0010",
            "LastName": "Marvel",
            "Contact": "234083234"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "step@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "nash*$",
                "State": "FL"
            },
            "FirstName": "Lily",
            "UserId": "PT2248",
            "LastName": "Lily",
            "Contact": "493048"
        },
        {
            "Allergy": "nut",
            "FoodCategory": "vegetarian",
            "Email": "ring@yahoo.com",
            "Address": {
                "Address2": "Street#",
                "Country": "USA",
                "Address1": "House#",
                "City": "vin984",
                "State": "FL"
            },
            "FirstName": "Mia",
            "UserId": "PT8445",
            "LastName": "Mia",
            "Contact": "603820"
        }
    ]
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3DDIETICIAN
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/UserType%3DPATIENT
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3DDT7870
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Ddt7870
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3D%40%40%40%40%40
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3D7870
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	GET
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dabcd
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "MorbidityMarkerRef": "less than 100",
    "MorbidityTestUnit": "less than 100"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 27
Connection: close

{
    "msg": "Item not found!"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "HondaCivic",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "365678",
    "Email": "srrightht@com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT5016"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "HondaCivic",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "365678",
    "Email": "srrightht@com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT5016"
}
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "John475",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "749374",
    "Email": "ping@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT0923"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:07 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "37585",
    "Email": "dave@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT74658"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 70
Connection: close

{
    "Message": "Missing Items OR Invalid Entry. Check on ['FirstName']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Paw",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "9837484",
    "Email": "ring@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT1098"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Messi$",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "8726473",
    "Email": "zing@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT8735"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "9843",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "483947",
    "Email": "wing@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT94736"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "@#$",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "33445435",
    "Email": "blng@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "DT39548"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Barbie Doll",
    "LastName": "zaara",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "5546546",
    "Email": "ling@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT0393"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "David",
    "LastName": "38485",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "56394",
    "Email": "cling@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT5482"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Emma",
    "LastName": "@*$!",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "2345466",
    "Email": "ding@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT0383"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Sophia",
    "LastName": "bun98@$",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "2345436",
    "Email": "eling@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT748"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Ava",
    "LastName": "",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "266322222",
    "Email": "fing@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT10906"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 69
Connection: close

{
    "Message": "Missing Items OR Invalid Entry. Check on ['LastName']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Avenger",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "$%&",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "592748",
    "Email": "busy@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT7826"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Avenger",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "$%&",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "592748",
    "Email": "busy@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT7826"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:08 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Don",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "1234",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "493659",
    "Email": "blue@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT8264"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Mia",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "vin984",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "603820",
    "Email": "ring@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT2648"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Zoe",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "5756048",
    "Email": "wind@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT78293"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Lily",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "nash*$",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "493048",
    "Email": "step@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT8425"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Jessia",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "7834",
        "Country": "USA"
    },
    "Contact": "9837",
    "Email": "card@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT98568"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Ruby",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "$%@",
        "Country": "USA"
    },
    "Contact": "829038",
    "Email": "game@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT2459"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Lucy",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "TX57",
        "Country": "USA"
    },
    "Contact": "2648",
    "Email": "acid@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT26544"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Lucy",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "TX57",
        "Country": "USA"
    },
    "Contact": "2648",
    "Email": "acid@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT26544"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Amy",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "",
        "Country": "USA"
    },
    "Contact": "40827",
    "Email": "gave@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT0125"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Megan",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "3937"
    },
    "Contact": "39836",
    "Email": "have@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT7820"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Ardan",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "*?$!"
    },
    "Contact": "9752",
    "Email": "help@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT369"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Piper",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": ""
    },
    "Contact": "8242",
    "Email": "link@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT2597"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Willa",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "INDIA984"
    },
    "Contact": "35728",
    "Email": "area@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT5987"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Max",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "alphabet",
    "Email": "only@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT1578"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "White",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "@$%",
    "Email": "save@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT9825"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Wren",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "567$",
    "Email": "like@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT4582"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:09 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Black",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "",
    "Email": "else@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT35478"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 68
Connection: close

{
    "Message": "Missing Items OR Invalid Entry. Check on ['Contact']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Blue",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "897384",
    "Email": "984639",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT8596"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "Green",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "458652",
    "Email": "@$&*?{}",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT1485"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ab",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "1589526",
    "Email": "",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT2678"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 66
Connection: close

{
    "Message": "Missing Items OR Invalid Entry. Check on ['Email']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ac",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "758963258",
    "Email": "hsdudsjsduw",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT4875"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ad",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "15235956",
    "Email": "lik1@yahoo.com",
    "FoodCategory": "non",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT0458"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ae",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "35984562",
    "Email": "like2@yahoo.com",
    "FoodCategory": "veg",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT2789"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "af",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "45896522",
    "Email": "like3@yahoo.com",
    "FoodCategory": "8798",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT9321"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ag",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6325987",
    "Email": "like4@yahoo.com",
    "FoodCategory": "@#$",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT789"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ah",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "1589632",
    "Email": "like5@yahoo.com",
    "FoodCategory": "veg%",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT4875"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ai",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "452308",
    "Email": "like6@yahoo.com",
    "FoodCategory": "non748",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT2687"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "aj",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6520358",
    "Email": "like7@yahoo.com",
    "FoodCategory": "",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT3695"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 73
Connection: close

{
    "Message": "Missing Items OR Invalid Entry. Check on ['FoodCategory']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ak",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "1203482",
    "Email": "like8@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "8989",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT7895"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "al",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "7025630",
    "Email": "like9@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "^&*$",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Patient",
    "DieticianId": "PT369548"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:10 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "am",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "4856012560",
    "Email": "like10@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT15789"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 68
Connection: close

{
    "Message": "Missing Items OR Invalid Entry. Check on ['Allergy']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "an",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "60125485369",
    "Email": "like11@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "28732",
    "DieticianId": "DT745856"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ao",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "503695522",
    "Email": "like12@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "?><%&",
    "DieticianId": "PT485658"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ap",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6213501",
    "Email": "like13@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "",
    "DieticianId": "PT72595"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 69
Connection: close

{
    "Message": "Missing Items OR Invalid Entry. Check on ['UserType']"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "aq",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "5012698520",
    "Email": "like14@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "lion",
    "DieticianId": "DT6482"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "ar",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "360125632",
    "Email": "like15@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "patient",
    "DieticianId": "PT36948"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "as",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "6302158963",
    "Email": "like16@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "PATIENT",
    "DieticianId": "PT71589"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "aab",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "565465476",
    "Email": "like23@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT768768"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	POST
Request URI:	http://127.0.0.1:5000/api/Users/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": "aac",
    "LastName": "Lname",
    "Address": {
        "Address1": "House#",
        "Address2": "Street#",
        "City": "black sea",
        "State": "FL",
        "Country": "USA"
    },
    "Contact": "565465476",
    "Email": "like24@yahoo.com",
    "FoodCategory": "vegetarian",
    "Allergy": "nut",
    "LoginUsername": "None",
    "Password": "None",
    "UserType": "Dietician",
    "DieticianId": "DT45346547"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "Message": "User detail already Exists. Check on [ Firstname, Contact , Email ]"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:11 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
Connection: close

<html lang="en">
  <head>
    <title>404 Not Found</title>
  </head>
  <body>
    <h1>Not Found</h1>
    <p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>
  </body>
</html>
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninja@3567",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 85
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninja@3567",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " 66859723",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 83
Connection: close

{
    "UserId": "null",
    "FirstName": " 66859723",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 75
Connection: close

{
    "UserId": "null",
    "FirstName": " ",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 75
Connection: close

{
    "UserId": "null",
    "FirstName": " ",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B@234",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " 23456",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " ",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " ",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:12 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "new@234",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "23456",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "new@234",
        "Country": "new@234"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "23456",
        "Country": "23456"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "",
        "Country": ""
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:13 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "new@234",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "23456",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "",
    "Email": "85214@gmail.com",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 67
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " ",
    "LastName": " ",
    "Address": {
        "Address1": "",
        "Address2": "",
        "City": "",
        "State": "",
        "Country": ""
    },
    "Contact": "",
    "Email": "",
    "FoodCategory": "",
    "Allergy": ""
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 103
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Contact', 'Email', 'FoodCategory', 'Allergy']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "2345555",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "thisisemailaddress",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:14 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:15 GMT
Content-Type: application/json
Content-Length: 65
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Email']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "",
    "FoodCategory": "Veg",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:15 GMT
Content-Type: application/json
Content-Length: 65
Connection: close

{
    "Message": "Missing Items OR Invalid Entry.Check on ['Email']"
}
Request method:	PUT
Request URI:	http://127.0.0.1:5000/api/Users/DieticianId%3Dnull%26UserId%3Dnull
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "FirstName": " Ninjas",
    "LastName": " B",
    "Address": {
        "Address1": "house#1",
        "Address2": "street#1",
        "City": "newcity",
        "State": "newstate",
        "Country": "newstate"
    },
    "Contact": "newcountry",
    "Email": "85214@gmail.com",
    "FoodCategory": "anyRandomtxt",
    "Allergy": "NA"
}
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.9.13
Date: Thu, 28 Jul 2022 18:25:15 GMT
Content-Type: application/json
Content-Length: 81
Connection: close

{
    "UserId": "null",
    "FirstName": " Ninjas",
    "Message": "User updated successful"
}
